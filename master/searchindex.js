Search.setIndex({"docnames": ["extending", "graphtage", "graphtage.bounds", "graphtage.csv", "graphtage.expressions", "graphtage.fibonacci", "graphtage.formatter", "graphtage.json", "graphtage.levenshtein", "graphtage.matching", "graphtage.multiset", "graphtage.plist", "graphtage.printer", "graphtage.progress", "graphtage.search", "graphtage.sequences", "graphtage.utils", "graphtage.version", "graphtage.xml", "graphtage.yaml", "howitworks", "index", "library", "package", "printing"], "filenames": ["extending.rst", "graphtage.rst", "graphtage.bounds.rst", "graphtage.csv.rst", "graphtage.expressions.rst", "graphtage.fibonacci.rst", "graphtage.formatter.rst", "graphtage.json.rst", "graphtage.levenshtein.rst", "graphtage.matching.rst", "graphtage.multiset.rst", "graphtage.plist.rst", "graphtage.printer.rst", "graphtage.progress.rst", "graphtage.search.rst", "graphtage.sequences.rst", "graphtage.utils.rst", "graphtage.version.rst", "graphtage.xml.rst", "graphtage.yaml.rst", "howitworks.rst", "index.rst", "library.rst", "package.rst", "printing.rst"], "titles": ["Extending Graphtage", "graphtage", "graphtage.bounds", "graphtage.csv", "graphtage.expressions", "graphtage.fibonacci", "graphtage.formatter", "graphtage.json", "graphtage.levenshtein", "graphtage.matching", "graphtage.multiset", "graphtage.plist", "graphtage.printer", "graphtage.progress", "graphtage.search", "graphtage.sequences", "graphtage.utils", "graphtage.version", "graphtage.xml", "graphtage.yaml", "How Graphtage Works", "Graphtage Documentation", "Using Graphtage Programmatically", "Graphtage API", "Printing Protocol"], "terms": {"design": [0, 6], "extens": [0, 1, 3, 4, 6, 7, 11, 12, 15, 18, 19], "new": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 15, 16, 18, 19, 21, 22], "filetyp": [0, 3, 6, 7, 11, 18, 19, 21, 22, 23], "can": [0, 1, 2, 4, 5, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "easili": [0, 22], "defin": [0, 1, 4, 6, 9, 10, 15, 16, 18], "well": [0, 2], "node": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 15, 18, 19, 20, 21, 24], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22], "edit": [0, 3, 6, 7, 8, 10, 11, 15, 18, 19, 20, 21, 23, 24], "formatt": [0, 1, 3, 7, 8, 10, 11, 15, 18, 19, 21, 22, 23, 24], "printer": [0, 1, 3, 6, 7, 8, 10, 11, 13, 15, 18, 19, 21, 22, 23, 24], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "section": [0, 6, 21, 22], "give": [0, 6], "some": [0, 6, 16, 22], "exampl": [0, 1, 2, 3, 4, 6, 9, 10, 11, 14, 15, 16, 18, 20, 21, 22], "how": [0, 1, 3, 6, 7, 9, 11, 15, 18, 19, 22, 24], "implement": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 24], "each": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "print": [0, 1, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21], "protocol": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23], "from_nod": [1, 8, 9, 10, 15, 18, 22, 24], "to_nod": [1, 8, 9, 10, 15, 18, 22], "option": [1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "none": [1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24], "constant_cost": 1, "int": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19], "0": [1, 2, 3, 7, 9, 11, 15, 16, 18, 19, 24], "cost_upper_bound": 1, "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19], "abc": [1, 6, 15], "abstract": [1, 4, 6, 9, 12, 15], "__init__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19], "construct": [1, 2, 3, 6, 8, 9, 10, 11, 15, 16, 18, 19, 20, 22], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24], "transform": [1, 3, 8, 11, 15, 18, 21], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "lower": [1, 2, 8, 10, 15, 18], "bound": [1, 3, 8, 9, 10, 11, 14, 15, 16, 18, 20, 21, 23, 24], "cost": [1, 3, 8, 9, 10, 11, 15, 18, 24], "an": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24], "upper": [1, 2, 6, 8, 10, 15, 18], "__iter__": [1, 3, 4, 5, 8, 10, 15, 16, 18], "iter": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "over": [1, 2, 3, 4, 5, 6, 8, 10, 11, 14, 15, 16, 18], "s": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 22, 24], "sub": [1, 3, 6, 7, 8, 10, 11, 15, 18, 19], "result": [1, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 18, 21], "__lt__": [1, 2, 8, 10, 15, 18], "other": [1, 2, 6, 8, 9, 10, 14, 15, 16, 18], "test": [1, 3, 6, 8, 10, 11, 15, 18, 20], "whether": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22], "ar": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 22, 24], "less": [1, 2, 5, 8, 9, 10, 15, 18], "than": [1, 2, 4, 5, 8, 9, 10, 12, 14, 15, 16, 18, 22], "rang": [1, 8, 9, 10, 14, 15, 18, 21, 23], "default": [1, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 22], "provid": [1, 2, 3, 4, 5, 7, 10, 11, 12, 15, 16, 18, 19], "when": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 18, 19], "wa": [1, 3, 4, 6, 7, 8, 9, 10, 11, 15, 18, 19, 20, 22], "If": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 24], "constructor": [1, 3, 9, 10, 11, 15, 18], "self": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19], "total_s": [1, 3, 10, 11, 15, 18], "1": [1, 4, 7, 8, 9, 10, 15, 16, 18, 20, 22], "has_non_zero_cost": [1, 8, 10, 15, 18], "bool": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19], "ha": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 22, 24], "non": [1, 2, 7, 8, 9, 10, 15, 18, 24], "zero": [1, 2, 3, 8, 10, 15, 16, 18, 24], "tighten": [1, 2, 8, 9, 10, 14, 15, 18], "until": [1, 2, 8, 9, 10, 14, 15, 18, 20], "either": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19], "its": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 21, 22], "greater": [1, 4, 8, 10, 15, 16, 18], "definit": [1, 2, 8, 9, 10, 14, 15, 18], "initial_bound": [1, 8, 10, 14, 15, 18], "is_complet": [1, 8, 9, 10, 15, 18], "complet": [1, 3, 6, 8, 9, 10, 11, 15, 18, 20], "further": [1, 10, 15, 18], "call": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 24], "tighten_bound": [1, 2, 8, 9, 10, 14, 15, 18], "chang": [1, 10, 15, 17, 18, 20], "natur": [1, 6, 10, 15, 18], "consid": [1, 3, 6, 10, 15, 18, 20], "valid": [1, 4, 8, 10, 15, 18], "abl": [1, 6, 9, 10, 12, 15, 18], "discern": [1, 10, 15, 18], "uniqu": [1, 4, 10, 15, 18], "solut": [1, 9, 10, 14, 15, 18], "even": [1, 3, 9, 10, 11, 15, 16, 18, 20], "final": [1, 6, 8, 10, 12, 13, 15, 18], "unknown": [1, 4, 10, 14, 15, 18], "should": [1, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21], "reimplement": [1, 7, 10, 15, 18, 19], "method": [1, 6, 9, 10, 12, 15, 16, 18, 24], "check": [1, 2, 4, 5, 6, 8, 10, 15, 18], "For": [1, 3, 4, 6, 9, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22], "case": [1, 6, 10, 15, 16, 18, 20], "onli": [1, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18], "true": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "futur": [1, 9, 10, 15, 18], "affect": [1, 6, 10, 15, 17, 18], "subsequ": [1, 10, 15, 18], "serv": [1, 10, 15, 18], "semant": [1, 4, 5, 10, 15, 18, 21], "on_diff": [1, 8, 10, 15, 18], "callback": [1, 7, 8, 10, 11, 15, 18, 19], "assign": [1, 6, 8, 9, 10, 15, 16, 18], "diff": [1, 3, 8, 10, 11, 15, 18, 20, 22], "add": [1, 5, 8, 9, 10, 12, 15, 16, 18], "recurs": [1, 3, 6, 8, 10, 11, 15, 18], "all": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 15, 16, 18, 22], "edit_list": [1, 8, 10, 15, 18], "append": [1, 8, 10, 12, 15, 17, 18], "ad": [1, 6, 8, 10, 12, 15, 18], "automat": [1, 2, 3, 4, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 20, 22], "never": [1, 3, 6, 7, 11, 15, 18, 19], "directli": [1, 18, 22], "unless": [1, 3, 5, 11, 15, 18, 20], "you": [1, 6, 9, 14, 18, 22], "realli": [1, 18], "know": [1, 6, 18], "what": [1, 18, 21, 23], "re": [1, 18], "do": [1, 3, 5, 9, 10, 18, 21, 22, 23], "rais": [1, 2, 4, 5, 6, 7, 9, 15, 16, 18, 24], "notimplementederror": [1, 18, 24], "caus": [1, 18], "fall": [1, 6, 18], "back": [1, 6, 12, 18], "own": [1, 18], "equival": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 18, 19], "possibl": [1, 3, 6, 8, 11, 14, 15, 18, 20], "have": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 22], "been": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 18, 19, 22], "fals": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19], "properti": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19], "union": [1, 2, 3, 4, 7, 9, 11, 12, 15, 16, 17, 18, 19], "like": [1, 3, 4, 7, 9, 11, 12, 15, 16, 18, 19, 20, 21, 22], "bool_lik": 1, "contain": [1, 3, 7, 9, 11, 15, 16, 17, 18, 19, 22], "creat": [1, 5, 14, 16], "given": [1, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 18, 19], "object": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 24], "obj": [1, 4, 10, 11, 16, 19], "underli": [1, 12], "python": [1, 3, 4, 5, 6, 7, 9, 11, 15, 16, 18, 22], "wrap": [1, 2, 3, 9, 11, 12, 15, 18], "calculate_total_s": [1, 3, 11, 15, 18], "By": [1, 3, 4, 7, 11, 15, 18, 19], "leaf": [1, 3], "size": [1, 3, 4, 11, 12, 13, 15, 18, 20, 21, 23], "equal": [1, 2, 4, 9, 10, 16], "length": [1, 3, 4], "string": [1, 3, 4, 6, 7, 8, 11, 12, 17, 18, 19], "represent": [1, 3, 6, 7, 11, 12, 15, 18, 19, 20, 21], "len": [1, 3, 4, 15], "str": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19], "howev": [1, 4, 6, 14, 17, 20], "subclass": [1, 6, 15], "mai": [1, 13, 14], "overrid": [1, 4, 6, 9], "whatev": 1, "requir": [1, 3, 5, 7, 10, 18, 19], "children": [1, 3, 5, 10, 11, 15, 18], "collect": [1, 4, 5, 9, 10, 18, 21], "so": [1, 5, 6, 9, 15, 24], "alwai": [1, 2, 3, 4, 6, 9, 11, 15, 17, 18], "empti": [1, 3, 4, 9, 16], "tupl": [1, 3, 4, 9, 16, 17], "df": [1, 3, 11, 15, 18], "perform": [1, 3, 9, 11, 15, 18, 20, 22], "depth": [1, 3, 11, 15, 18], "first": [1, 3, 6, 9, 11, 15, 16, 18, 22], "travers": [1, 3, 11, 15, 18], "descend": [1, 3, 5, 11, 15, 18], "includ": [1, 3, 4, 5, 11, 15, 17, 18, 22], "yield": [1, 2, 3, 4, 5, 11, 14, 15, 18], "stack": [1, 3, 4, 11, 15, 18], "while": [1, 2, 3, 5, 9, 11, 14, 15, 18], "pop": [1, 2, 3, 5, 9, 11, 15, 16, 18], "extend": [1, 3, 6, 7, 11, 12, 15, 18, 19], "revers": [1, 3, 4, 5, 6, 11, 15, 18], "t": [1, 3, 5, 6, 7, 8, 9, 11, 15, 16, 18, 19], "against": [1, 3, 6, 11, 15, 18], "which": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22], "version": [1, 3, 7, 9, 11, 15, 18, 19, 21, 22, 23], "being": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 18, 19, 21, 22], "edit_modifi": [1, 3, 11, 15, 18], "list": [1, 3, 4, 6, 7, 9, 11, 12, 13, 15, 16, 18, 19, 20], "callabl": [1, 3, 4, 5, 6, 7, 9, 11, 15, 16, 18, 19], "editable_dict": [1, 3, 11, 15, 18], "dict": [1, 3, 4, 7, 9, 11, 12, 15, 16, 18, 20], "ani": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "copi": [1, 3, 9, 11, 15, 16, 18], "__dict__": [1, 3, 4, 11, 15, 18], "therein": [1, 11, 18], "ret": [1, 3, 11, 15, 18], "is_leaf": [1, 3, 11, 15, 18], "kei": [1, 2, 5, 7, 10, 11, 12, 16, 18, 20, 22], "valu": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 18, 20, 22], "item": [1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 15, 16, 18, 19, 20], "isinst": [1, 6, 11, 18], "make_edit": [1, 3, 11, 15, 18], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "wherea": [1, 3, 11, 15, 18], "classmethod": [1, 3, 9, 11, 15, 16, 18], "edited_typ": [1, 3, 11, 15, 18], "dynam": [1, 3, 6, 11, 15, 18], "both": [1, 2, 3, 6, 9, 11, 15, 16, 18, 21, 22], "member": [1, 3, 4, 5, 9, 11, 14, 15, 18, 22], "variabl": [1, 3, 4, 6, 11, 15, 18, 22], "popul": [1, 3, 6, 7, 11, 15, 16, 18, 19], "new_nod": [1, 3, 11, 15, 18], "wrapped_tree_nod": [1, 3, 11, 15, 18], "Its": [1, 3, 11, 15, 18, 21], "accept": [1, 3, 5, 9, 11, 15, 16, 18], "calcul": [1, 3, 8, 9, 11, 15, 16, 18], "best": [1, 3, 6, 11, 14, 15, 18], "get_all_edit": [1, 3, 11, 15, 18, 22], "one": [1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21], "note": [1, 3, 6, 9, 11, 15, 18], "explod": [1, 3, 11, 15, 18], "sequenc": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 21, 22, 23], "instanc": [1, 3, 6, 7, 9, 11, 12, 15, 16, 18, 19], "also": [1, 3, 4, 5, 6, 7, 11, 15, 16, 17, 18, 19, 22], "therebi": [1, 3, 7, 11, 15, 18], "mutabl": [1, 3, 11, 15, 16, 18], "repr": 1, "write": [1, 3, 6, 7, 11, 12, 13, 15, 18, 19], "to_obj": [1, 3, 11, 15, 18], "arbitrari": [1, 3, 7, 9, 11, 15, 16, 18, 22], "immut": [1, 3, 11, 15, 18, 22], "time": [1, 3, 5, 7, 8, 9, 11, 15, 16, 18, 19, 20], "set": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19], "memoiz": [1, 3, 9, 11, 15, 18], "integ": [1, 2, 3, 4, 9, 11, 14, 15, 18], "repres": [1, 2, 3, 4, 10, 11, 15, 18], "allow_key_edit": [1, 18], "auto_match_kei": [1, 10, 18], "allow_list_edit": [1, 3], "allow_list_edits_when_same_length": [1, 3], "kwarg": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 15, 16, 18, 19], "pass": [1, 2, 3, 6, 7, 11, 12, 14, 15, 18, 19], "tree": [1, 2, 3, 7, 11, 18, 19, 21, 22], "build": [1, 3, 7, 11, 17, 18, 19], "__getattr__": 1, "undefin": [1, 5, 9], "initi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19], "keyword": [1, 3, 6, 7, 11, 15, 16, 18, 19], "attribut": [1, 4, 6, 12, 18], "specifi": [1, 4, 6, 12, 16], "arg": [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 15, 16, 18, 19], "compos": 1, "must": [1, 4, 9, 13], "finit": [1, 2, 14], "neg": [1, 2, 16], "avail": [1, 4, 6], "determin": [1, 3, 4, 6, 7, 9, 11, 14, 15, 17, 18, 19, 24], "longer": 1, "regardless": [1, 9], "our": [1, 22], "fulli": [1, 2, 8, 9, 14], "whose": [1, 13], "known": [1, 14], "constant": [1, 2, 4, 5], "kwd": [1, 16], "all_children_are_leav": [1, 3, 11, 15, 18], "leav": [1, 3, 11, 15, 18], "c": [1, 3, 7, 9, 11, 15, 16, 18, 19], "thei": [1, 2, 3, 5, 9, 11, 12, 15, 16, 18, 20, 21], "pure": [1, 3, 5, 9, 11, 15, 18], "map": [1, 3, 4, 8, 9, 11, 15, 16, 18, 21], "sole": [1, 3, 4, 8, 10, 11, 15, 18], "oper": [1, 2, 3, 5, 11, 15, 18, 21, 22, 23], "commandlin": [1, 3, 11, 15, 18, 21], "express": [1, 3, 11, 15, 18, 21, 23], "evalu": [1, 3, 4, 11, 15, 18], "dictionari": [1, 10, 16, 20], "multiset": [1, 9, 21, 23], "pair": [1, 4, 9, 16, 20], "unlik": 1, "more": [1, 2, 3, 4, 6, 9, 10, 14, 16], "effici": [1, 9, 14, 16], "altern": 1, "support": [1, 4, 6, 16, 21], "duplic": 1, "__contains__": 1, "k": [1, 5, 16], "_": [1, 4, 7], "run": [1, 17], "worst": 1, "linear": 1, "sought": 1, "exist": [1, 2, 10, 14, 16, 20, 21, 23], "__getitem__": [1, 16], "look": [1, 3, 6, 7, 11, 15, 18, 19], "up": [1, 3, 6, 7, 11, 14, 15, 16, 18, 19], "kvp": 1, "keyerror": [1, 4, 9, 16], "found": [1, 4, 6, 14, 16], "container_typ": [1, 3, 4, 15], "hashablecount": [1, 10, 21, 23], "store": [1, 4, 5, 9, 15, 16], "sequencenod": [1, 3, 7, 8, 10, 11, 18, 19, 21, 23], "_children": [1, 3, 15], "deep": [1, 15], "n": [1, 3, 4, 9, 12, 13, 15, 16], "static": [1, 3, 4, 6, 7, 11, 12, 15, 18, 19], "from_dict": 1, "source_dict": 1, "sourc": [1, 7, 8, 16, 18, 19, 20, 22], "similar": [1, 20], "sinc": [1, 2, 3, 9, 10, 20, 22], "sequenceformatt": [1, 3, 7, 11, 18, 19, 21, 23], "dure": 1, "add_to_collect": 1, "gener": [1, 4, 5, 6, 9, 14, 15, 16, 20, 21, 22], "compris": [1, 8, 22], "mixin": 1, "In": [1, 2, 16, 20], "practic": [1, 9, 21], "almost": [1, 9], "instanti": [1, 3, 6, 7, 11, 13, 15, 18, 19], "edited_cost": 1, "appli": [1, 12, 21], "sum": [1, 3, 4, 9, 15, 16], "e": [1, 2, 4, 5, 6, 9, 12, 14, 16, 20], "upper_bound": [1, 2], "instead": [1, 12, 16], "type_nam": 1, "default_mimetyp": 1, "mimetyp": 1, "file": [1, 3, 6, 7, 11, 16, 18, 19, 20, 21, 22], "format": [1, 3, 7, 9, 11, 12, 15, 18, 19, 20, 21, 23, 24], "registri": [1, 6], "inclus": [1, 2], "command": [1, 6, 12, 13, 17, 18, 22], "line": [1, 3, 12, 13, 17, 18, 20, 22], "argument": [1, 2, 3, 4, 6, 15], "mime": [1, 3, 7, 11, 18, 19], "auto": [1, 2, 4], "detect": 1, "short": 1, "name": [1, 4, 6, 12, 13, 21], "via": 1, "addit": [1, 4, 12, 17, 22], "associ": [1, 3, 4, 5, 6, 7, 11, 15, 18, 19], "valueerror": [1, 2, 4, 5, 7, 9, 15], "conflict": 1, "preexist": [1, 6], "build_tre": [1, 21, 22, 23], "path": [1, 3, 7, 11, 16, 18, 19], "intermedi": [1, 6, 7, 11, 15, 18, 19, 21], "pars": [1, 3, 7, 11, 18, 19, 21, 23], "root": [1, 3, 6, 7, 11, 12, 15, 18, 19], "build_tree_handling_error": [1, 3, 7, 11, 18, 19], "same": [1, 3, 6, 7, 9, 11, 12, 18, 19, 22], "human": [1, 3, 7, 11, 18, 19], "readabl": [1, 3, 6, 7, 11, 12, 13, 18, 19], "error": [1, 3, 4, 7, 11, 18, 19], "failur": [1, 3, 7, 11, 18, 19], "throw": [1, 3, 7, 11, 18, 19], "except": [1, 3, 4, 7, 11, 18, 19], "On": [1, 3, 7, 11, 18, 19], "success": [1, 3, 7, 8, 11, 18, 19], "messag": [1, 3, 4, 7, 11, 12, 13, 18, 19], "get_default_formatt": [1, 3, 7, 11, 18, 19], "namespac": [1, 6], "abcmeta": [1, 6], "metaclass": [1, 3, 6, 7, 11, 15, 18, 19], "regist": [1, 6], "them": [1, 2, 7, 9, 16, 18, 19], "lookup": [1, 4, 6], "clsdict": [1, 6], "__instancecheck__": [1, 6], "cl": [1, 3, 6, 7, 11, 15, 18, 19], "__subclasscheck__": [1, 6], "issubclass": [1, 6], "_abc_caches_clear": [1, 6], "clear": [1, 5, 6, 9, 16], "cach": [1, 4, 6], "debug": [1, 6, 24], "_abc_registry_clear": [1, 6], "_dump_registri": [1, 6], "helper": [1, 6, 9], "mro": [1, 6], "resolut": [1, 6], "order": [1, 5, 6, 9, 14, 16, 21], "virtual": [1, 6], "allow": [1, 4, 6, 16, 18, 22], "usag": [1, 4, 6], "decor": [1, 2, 6, 12], "attempt": [1, 2, 9, 14], "two": [1, 6, 8, 9, 16, 21, 22], "share": 1, "most": [1, 4, 9, 14, 16, 20], "doe": [1, 2, 4, 5, 9, 12, 15, 16, 21, 23], "current": [1, 4, 14, 18], "protect": [1, 4, 15], "__len__": [1, 3, 15, 16], "number": [1, 3, 4, 5, 6, 7, 12, 14, 15, 16, 17, 18, 19], "total": [1, 3, 7, 14, 15, 18, 19], "output": [1, 6, 9, 12, 13, 16, 22], "sequenceedit": [1, 8, 10, 21, 23], "remaind": [1, 4, 15], "get_formatt": [1, 3, 7, 8, 10, 11, 15, 18, 19, 21, 23, 24], "conveni": [1, 4, 6, 8, 10, 12, 15], "aid": [1, 8, 10, 15], "autom": [1, 6, 8, 10, 15], "It": [1, 4, 5, 6, 8, 9, 10, 15, 17], "cast": [1, 8, 10, 15], "float_lik": 1, "float": [1, 4, 7, 9], "default_inst": [1, 3, 6, 7, 11, 15, 18, 19, 22], "formattercheck": [1, 3, 7, 11, 15, 18, 19, 21, 23], "__new__": [1, 3, 6, 7, 11, 15, 18, 19], "sub_formatt": [1, 3, 6, 7, 11, 15, 18, 19], "parent": [1, 3, 5, 6, 7, 11, 12, 15, 18, 19, 22], "__class__": [1, 3, 6, 7, 11, 15, 18, 19], "base_formatt": [1, 3, 6, 7, 11, 15, 18, 19], "is_parti": [1, 3, 6, 7, 11, 15, 18, 19], "manual": [1, 3, 6, 7, 11, 13, 15, 18, 19], "modifi": [1, 3, 5, 6, 7, 11, 15, 18, 19, 20], "node_or_edit": [1, 3, 7, 11, 15, 18, 19, 24], "with_edit": [1, 3, 7, 11, 15, 18, 19, 24], "veri": [1, 3, 7, 11, 15, 18, 19], "complex": [1, 3, 4, 7, 11, 15, 18, 19, 21], "due": [1, 3, 7, 11, 15, 18, 19], "see": [1, 3, 6, 7, 11, 13, 15, 18, 19, 21, 22, 24], "detail": [1, 3, 7, 11, 15, 18, 19], "descript": [1, 3, 7, 11, 15, 18, 19], "sub_format_typ": [1, 3, 6, 7, 11, 15, 18, 19], "correspond": [1, 3, 6, 7, 11, 15, 16, 18, 19], "to_insert": [1, 10], "insert_into": 1, "penalti": [1, 8], "insert_str": 1, "int_lik": 1, "from_kvp": 1, "to_kvp": 1, "__eq__": [1, 9], "anoth": [1, 2, 3, 4, 6, 8, 9, 10, 16, 20, 22], "keyvaluepair": 1, "compar": [1, 2, 3, 5, 6, 9, 21], "otherwis": [1, 4, 16, 24], "smaller": [1, 2], "blue": [1, 7], "follow": [1, 3, 4, 6, 7, 11, 15, 16, 18, 19, 24], "bright": [1, 7, 12], "white": 1, "child": [1, 3, 5, 7, 11, 15, 18, 19], "match_from": 1, "match_to": 1, "null": [1, 9], "initial_cost": 1, "compound": 1, "choos": [1, 24], "among": 1, "compet": 1, "chosen": [1, 24], "search": [1, 21, 23], "iterativetighteningsearch": [1, 21, 23], "One": [1, 2], "choic": 1, "best_poss": 1, "yet": [1, 6, 8, 14, 16], "to_remov": [1, 10], "remove_from": [1, 22], "remove_str": 1, "to_replac": 1, "replace_with": 1, "context": [1, 3, 4, 7, 11, 12, 15, 18, 19], "escap": [1, 3, 7, 12, 18, 19], "onc": [1, 7, 8, 18, 19], "charact": [1, 4, 7, 12, 18, 19], "itself": [1, 3, 5, 7, 9, 11, 14, 18, 19, 22], "is_quot": [1, 7, 18, 19], "print_stringedit": [1, 7, 18, 19], "print_stringnod": [1, 7, 11, 18, 19], "write_char": [1, 7, 18, 19], "index": [1, 3, 7, 11, 15, 16, 18, 19, 21], "num_edit": [1, 7, 18, 19], "There": [1, 4, 7, 12, 18, 19, 21, 22], "need": [1, 3, 7, 9, 18, 19, 22], "special": [1, 6, 7, 18, 19, 20, 24], "alreadi": [1, 2, 4, 5, 7, 9, 12, 18, 19], "configur": [1, 7, 18, 19], "prior": [1, 7, 9, 18, 19], "write_end_quot": [1, 7, 18, 19], "end": [1, 4, 7, 8, 11, 12, 15, 16, 18, 19], "quot": [1, 7, 18, 19], "necessari": [1, 2, 6, 8, 9, 12, 18, 19], "write_start_quot": [1, 7, 18, 19], "start": [1, 4, 6, 7, 8, 11, 12, 15, 18, 19, 20, 21], "string_lik": 1, "intend": [1, 2], "hand": 1, "potenti": 1, "itertool": 1, "chain": 1, "els": [1, 6, 13, 16], "mime_typ": 1, "At": 1, "least": [1, 3, 7, 11, 15, 16, 18, 19], "guess": 1, "guess_typ": 1, "could": [1, 6, 9, 17], "identifi": [1, 3, 4], "s1": 1, "s2": 1, "editdist": [1, 21, 23], "comput": [1, 4, 8, 9, 10, 12], "distanc": [1, 8, 20], "between": [1, 7, 8, 9, 11, 15, 18, 19], "list1": 1, "list2": 1, "insert_remove_penalti": [1, 8], "levenshtein": [1, 20, 21, 23], "modul": [2, 4, 9, 10, 12, 13, 14, 17, 18, 20, 21, 23], "import": [2, 6, 9, 16, 22], "p": [2, 3, 7, 11, 15, 18, 19, 20, 22], "posit": [2, 3, 16], "10": [2, 4, 9], "20": [2, 9], "30": 2, "varieti": 2, "data": [2, 9, 16, 22], "structur": [2, 9, 16, 20, 21, 22], "algorithm": [2, 4, 5, 8, 9, 14, 20, 22], "g": [2, 4, 6, 12, 14, 20], "negative_infin": 2, "positive_infin": 2, "shrink": [2, 9, 14], "were": [2, 6, 9, 14], "suffici": 2, "distinct": [2, 9], "differenti": 2, "domin": 2, "event": [2, 9], "ident": 2, "after": [2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19], "id": [2, 4], "constitut": 2, "where": [2, 4, 6, 7, 12], "infinit": 2, "primarili": 2, "unbound": [2, 8, 16, 20], "lower_bound": [2, 8, 24], "neither": [2, 10], "intersect": [2, 9, 16], "to_interv": 2, "interv": 2, "convert": [2, 4, 22], "intervaltre": 2, "packag": 2, "ensur": [2, 4], "overlap": [2, 9], "b": [2, 9, 14, 16], "smallest": [2, 5, 9, 14, 21, 23], "minimum": [2, 8, 9, 10, 16, 20], "func": [2, 12], "repeatedli": 2, "ignor": [2, 16], "heap": [2, 5], "fibonacciheap": [2, 21, 23], "push": [2, 5], "dif": [3, 6, 7, 11, 18, 19, 20, 22], "render": [3, 7, 11, 17, 18, 19, 22], "text": [3, 4, 7, 13, 18, 19], "buildopt": [3, 7, 11, 18, 19, 21, 23], "treenod": [3, 6, 7, 8, 9, 10, 11, 15, 18, 19, 21, 22, 23, 24], "graphtageformatt": [3, 7, 8, 10, 11, 15, 18, 19, 21, 23, 24], "top": 3, "level": 3, "print_leafnod": [3, 7, 11, 18, 19], "leafnod": [3, 7, 11, 18, 19, 21, 23], "column": [3, 16], "row": [3, 16], "writer": [3, 13, 21, 23], "writerow": 3, "json": [3, 6, 15, 20, 21, 22, 23], "jsonformatt": [3, 21, 22, 23], "listnod": [3, 7, 11, 15, 18, 21, 22, 23], "remov": [3, 5, 7, 8, 9, 12, 14, 16, 18, 19, 21, 22, 23], "insert": [3, 4, 5, 7, 8, 16, 18, 19, 21, 23], "editedtreenod": [3, 8, 10, 11, 15, 18, 21, 22, 23], "compoundedit": [3, 10, 11, 15, 18, 21, 23], "mappingnod": [3, 7, 11, 15, 18, 21, 23], "match": [3, 7, 8, 10, 11, 15, 18, 19, 21, 23], "super": [3, 7, 8], "edit_print": [3, 7, 11, 15, 18, 19], "simpli": [3, 6, 7, 11, 15, 18, 19], "deleg": [3, 7, 10, 11, 15, 18, 19, 24], "partial": [3, 5, 7, 9, 11, 15, 18, 19], "item_newlin": [3, 7, 11, 15, 18, 19], "is_first": [3, 7, 11, 15, 18, 19], "is_last": [3, 7, 11, 15, 18, 19], "singl": 3, "items_ind": [3, 7, 11, 15, 18, 19], "indent": [3, 7, 11, 12, 15, 18, 19], "immedi": [3, 6, 7, 11, 15, 18, 19], "start_symbol": [3, 7, 11, 15, 18, 19], "befor": [3, 4, 6, 7, 11, 14, 15, 16, 17, 18, 19], "print_csvrow": 3, "print_sequencenod": [3, 7, 11, 15, 18, 19], "With": [3, 11, 15, 18, 19], "just": [3, 6, 11, 15, 18, 19, 22], "newlin": [3, 6, 7, 11, 12, 13, 15, 18, 19], "last": [3, 6, 7, 8, 11, 13, 15, 16, 18, 19], "becaus": [3, 6, 9], "print_csvnod": 3, "reader": 3, "element": [3, 5, 9, 10, 12, 16, 17, 18, 20], "i": [3, 5, 6, 9, 14, 16], "extra": [3, 7, 11, 12, 13, 15, 18, 19], "safer": 4, "eval": 4, "infix": 4, "adjust": 4, "preced": [4, 6], "getitem": 4, "modicum": 4, "safeti": 4, "access": [4, 16], "programm": 4, "disallow": 4, "privat": 4, "here": [4, 6, 9, 17, 21, 22], "foo": [4, 6, 16, 20, 22], "bar": [4, 6, 13, 20, 22], "2": [4, 9, 16, 20, 22], "rpn": 4, "raw_str": 4, "op": 4, "5": [4, 9, 16, 20], "lambda": [4, 5, 7, 9, 11, 15, 18, 19], "0x135057f80": 4, "multipl": 4, "4": [4, 9, 16, 20, 22], "0x135057d40": 4, "local": [4, 6], "40": 4, "1234": 4, "elid": 4, "trace": 4, "cannot": [4, 14, 20], "read": [4, 12, 13, 16, 21], "0x127808170": 4, "0x127805ef0": 4, "offset": [4, 12, 13], "15": [4, 20], "default_glob": 4, "global": [4, 6, 12, 14], "ab": 4, "ascii": 4, "bin": 4, "bytearrai": 4, "byte": [4, 7, 12, 13, 16], "chr": 4, "enumer": 4, "filter": 4, "frozenset": [4, 9], "hash": [4, 9, 16], "hex": 4, "max": [4, 16], "min": 4, "oct": 4, "ord": [4, 9], "round": 4, "slice": 4, "sort": [4, 5, 9, 14, 16, 20, 21, 23], "zip": 4, "operators_by_nam": 4, "identifier_byt": 4, "letter": 4, "plu": [4, 12, 16], "close": [4, 12, 13], "bracket": 4, "raw_text": 4, "raw": 4, "within": 4, "input": [4, 6, 9, 14, 16, 20, 22], "raw_token": 4, "origin": [4, 20, 22], "start_token_typ": 4, "alia": 4, "collection_typ": 4, "datastructur": [4, 9], "keep": [4, 12, 16], "track": [4, 12], "polish": 4, "notat": 4, "state": [4, 5], "omit": [4, 5, 7, 11, 12, 13, 15, 16, 18, 19], "get_valu": 4, "liter": 4, "resolv": [4, 6], "numer": 4, "meta": 4, "inject": 4, "fix": 4, "ariti": 4, "indic": [4, 9, 22], "is_list": 4, "open": [4, 16], "discard": [4, 9], "delimit": [4, 7, 11, 15, 17, 18, 19], "is_function_cal": 4, "enum": 4, "bitwise_and": 4, "9": 4, "bitwise_left_shift": 4, "6": [4, 20], "bitwise_not": 4, "3": [4, 9, 16, 20, 22], "bitwise_or": 4, "11": 4, "bitwise_right_shift": 4, "bitwise_xor": 4, "divis": 4, "8": 4, "function_cal": 4, "greater_than": 4, "7": [4, 20], "greater_than_equ": 4, "IN": 4, "int_divis": 4, "less_than": 4, "less_than_equ": 4, "logical_and": 4, "12": [4, 9], "logical_not": 4, "logical_or": 4, "13": 4, "member_access": 4, "not_equ": 4, "subtract": [4, 16], "ternary_condit": 4, "ternary_els": 4, "14": [4, 9], "unary_minu": 4, "unary_plu": 4, "prioriti": 4, "execut": [4, 20], "is_left_associ": 4, "include_in_global_operator_t": 4, "expand": [4, 6, 8], "three": [4, 17], "consum": 4, "left_associ": 4, "left": [4, 5, 8], "programmat": 4, "pari": 4, "runtimeerror": 4, "with_traceback": 4, "tb": 4, "__traceback__": 4, "stream": [4, 12, 13, 16, 22], "io": [4, 12, 13], "commenc": 4, "has_next": 4, "peek": [4, 5], "next": [4, 6, 8], "would": [4, 6, 22], "actual": [4, 5, 12, 24], "prev_token": 4, "previou": 4, "get": [4, 5, 16], "getattr": 4, "permit": [4, 7, 12, 19], "retriev": 4, "underscor": 4, "startswith": 4, "request": [4, 6], "api": [4, 12], "custom": [4, 7, 19], "behavior": [4, 5, 6, 9], "shunt": 4, "yard": 4, "expression_str": 4, "stream_or_str": 4, "mani": [5, 16], "we": [5, 6, 9, 14, 22, 24], "speedup": 5, "amort": 5, "function": [5, 10, 14, 15, 21, 22, 23], "decrease_kei": 5, "x": [5, 7, 11, 19], "decreas": [5, 8], "extract": 5, "comparison": [5, 22], "min_nod": 5, "without": [5, 12], "assum": [5, 7, 20], "delet": 5, "assumpt": [5, 14], "incorrect": [5, 14], "lead": 5, "corrupt": 5, "add_child": 5, "increment": 5, "degre": 5, "sibl": 5, "prevent": [5, 6], "manipul": 5, "mark": [5, 12], "remove_child": 5, "decrement": 5, "right": [5, 8], "wrapper": 5, "reusabl": 6, "textual": 6, "ti": 6, "easiest": 6, "problem": [6, 9, 14, 20], "capabl": [6, 9], "librari": [6, 16, 22], "yaml": [6, 21, 22, 23], "Or": [6, 16], "enabl": [6, 12, 14], "through": [6, 9, 12], "sai": 6, "develop": [6, 9, 17], "mean": 6, "user": 6, "deal": 6, "come": 6, "plai": 6, "magic": [6, 22], "wizardri": 6, "bit": 6, "infer": 6, "figur": 6, "out": [6, 12, 16], "specif": [6, 14, 21], "make": [6, 14], "stringformatt": [6, 7, 18, 19, 21, 23], "def": 6, "print_str": 6, "f": [6, 16], "thing": 6, "registr": 6, "disabl": 6, "intformatt": 6, "print_int": 6, "1337": 6, "work": [6, 8, 9, 10, 22], "demonstr": 6, "inherit": 6, "fooformatt": 6, "print_foo": 6, "straightforward": 6, "enough": 6, "But": [6, 9], "separ": [6, 20], "handl": [6, 12], "barformatt": 6, "print_bar": 6, "cool": 6, "huh": 6, "collis": 6, "let": 6, "join": [6, 21], "oof": 6, "As": [6, 22], "prefer": 6, "got": 6, "lucki": 6, "printout": 6, "though": [6, 9, 16], "might": [6, 14, 21], "happen": 6, "That": 6, "desir": 6, "To": [6, 22], "compartment": 6, "insid": 6, "formtter": 6, "organ": 6, "hierarch": 6, "barstringformatt": 6, "now": 6, "invok": [6, 7], "describ": 6, "proper": 6, "activ": 6, "abov": [6, 8], "__mro__": 6, "__name__": 6, "repeat": [6, 16], "process": 6, "subformatt": 6, "point": [6, 8, 20], "basic": [6, 12], "decid": 6, "everi": [6, 12], "begin": [6, 16], "print_": 6, "verifi": 6, "insofar": 6, "checker": 6, "typeerror": 6, "hint": [6, 12, 13], "node_typ": 6, "correct": 6, "made": [6, 13], "accord": 6, "applic": [7, 11, 18, 19], "javascript": 7, "symbol": [7, 11, 15, 17, 18, 19], "end_symbol": [7, 11, 15, 18, 19], "delimiter_callback": [7, 11, 15, 18, 19], "print_mappingnod": [7, 11, 18, 19], "print_multisetnod": [7, 11, 18, 19], "multisetnod": [7, 9, 10, 21, 23], "print_containernod": [7, 19], "containernod": [7, 11, 15, 18, 19, 21, 23], "fallback": [7, 19], "xml": [7, 19, 21, 23], "xmlelement": [7, 19, 21, 23], "print_keyvaluepairnod": [7, 11, 18, 19], "keyvaluepairnod": [7, 10, 11, 18, 19, 21, 22, 23], "dump": 7, "print_xmlel": [7, 18], "print_listnod": [7, 11, 18, 19], "stringedit": [7, 18, 19, 21, 22, 23], "stringnod": [7, 11, 18, 19, 21, 22, 23], "python_obj": 7, "force_leaf_nod": 7, "unsupport": 7, "onlin": [8, 20], "metric": [8, 20], "improv": [8, 14, 20], "converg": [8, 14, 20], "optim": [8, 9, 14, 20], "discov": [8, 9, 20], "from_seq": 8, "to_seq": 8, "target": 8, "matrix": [8, 9, 16], "diagon": 8, "cell": [8, 16], "reconstruct": [8, 22], "updat": [8, 9, 16, 17], "observ": 8, "monoton": [8, 14], "abstractcompoundedit": [8, 10, 15, 18, 21, 23], "incomplet": 8, "canon": [8, 20], "solv": [9, 14, 20], "variant": 9, "much": 9, "code": [9, 12], "nearli": 9, "karp": 9, "weight": [9, 20], "bipartit": [9, 20], "karp78": 9, "find": [9, 10, 14, 24], "minim": 9, "part": 9, "wai": 9, "scipi": [9, 16], "asymptot": 9, "inferior": 9, "superior": 9, "compil": 9, "compon": [9, 22], "interest": 9, "d": [9, 16], "edge_weight": 9, "97": 9, "99": 9, "101": 9, "103": 9, "105": 9, "from_nodes_index": 9, "matched_to_nodes_index": 9, "matched_edge_weight": 9, "16": 9, "18": 9, "richard": 9, "m": [9, 20], "expect": 9, "o": 9, "mn": 9, "log": 9, "1978": 9, "cost_bar": 9, "cost_star": 9, "_from_iter": 9, "signatur": 9, "_hash": 9, "don": 9, "__hash__": 9, "hashabl": 9, "compat": [9, 13], "ought": 9, "freedom": 9, "built": 9, "effect": [9, 16, 20], "present": [9, 16], "shallow": [9, 16], "differ": [9, 14], "difference_upd": 9, "noth": 9, "intersection_upd": 9, "isdisjoint": 9, "issubset": 9, "report": 9, "issuperset": 9, "symmetric_differ": 9, "symmetr": 9, "exactli": 9, "symmetric_difference_upd": 9, "construct_edg": 9, "sorted_neighbor": 9, "matcher": 9, "direct": 9, "overridden": [9, 15], "flip_direct": 9, "path_to": 9, "from_any_of": 9, "is_speci": 9, "head": [9, 17], "tail": 9, "get_edg": 9, "atop": [9, 18], "select": 9, "graph": [9, 20, 21], "make_distinct": [9, 21, 23], "Then": 9, "multisetedit": [9, 21, 23], "dens": 9, "lazili": 9, "realiz": 9, "partwai": 9, "better": 9, "linear_sum_assign": 9, "faster": 9, "retain": 9, "ever": 9, "free_destin": 9, "free_sourc": 9, "min_valu": 9, "max_valu": 9, "dtype": 9, "numpi": 9, "w": [9, 16], "second": 9, "rest": 9, "nativ": [9, 16], "larger": [9, 10], "64": 9, "63": 9, "matched_to_node_index": 9, "boolean": 9, "dictnod": [10, 21, 22, 23], "latter": [10, 21], "conta": 10, "from_set": 10, "to_set": 10, "unord": [10, 21], "weightedbipartitematch": [10, 21, 23], "These": 10, "typic": [10, 15, 17], "nor": 10, "enforc": 10, "signific": 10, "amount": 10, "abstractedit": [10, 15, 18, 21, 23], "appl": 11, "print_boolnod": 11, "boolnod": [11, 21, 23], "print_floatnod": 11, "floatnod": [11, 21, 23], "print_integernod": 11, "integernod": [11, 21, 22, 23], "print_plistnod": 11, "write_obj": [11, 19], "sever": [12, 21], "reason": [12, 20, 21], "toggl": 12, "ansi": 12, "color": 12, "logic": 12, "pretti": 12, "concurr": 12, "statu": [12, 13], "tqdm": [12, 13], "html": [12, 21, 23], "rather": [12, 22], "default_print": [12, 22], "sy": [12, 13, 16], "stdout": [12, 13, 22], "fore": 12, "ansifor": 12, "ansiback": 12, "style": [12, 15], "ansistyl": 12, "termin": 12, "foreground": 12, "background": 12, "bg_color": 12, "foreground_color": 12, "dim": 12, "end_cod": 12, "is_appli": 12, "start_cod": 12, "combining_mark": 12, "combin": 12, "written": [12, 13], "__enter__": [12, 16], "interact": [12, 16, 18, 22], "flush": [12, 13], "buffer": [12, 13], "isatti": [12, 13], "tty": 12, "marks_str": 12, "raw_writ": 12, "modif": 12, "get_back": 12, "get_for": 12, "titl": 12, "out_stream": [12, 13], "ansi_color": 12, "quiet": [12, 13], "progress": [12, 21, 23], "suppress": [12, 13], "fileno": [12, 13], "along": [12, 13], "html_element": 12, "element_nam": 12, "inlin": 12, "step": [12, 22], "indent_str": 12, "four": [12, 16], "space": [12, 14], "mode": [12, 13], "ellipsi": [12, 13], "anystr": [12, 13], "readlin": [12, 13], "limit": [12, 13], "seek": [12, 13], "whenc": [12, 13], "seekabl": [12, 13], "status_stream": [12, 13], "textio": [12, 13], "strike": 12, "tell": [12, 13], "trang": [12, 13], "truncat": [12, 13], "under_plu": 12, "underneath": 12, "writabl": [12, 13], "write_raw": [12, 13], "stderr": [12, 13], "writelin": [12, 13], "fake": 12, "emit": 12, "statuswrit": [12, 21, 23], "subset": 12, "full": 13, "lifetim": 13, "control": 13, "block": 13, "lost": 13, "reveal": 14, "100": 14, "200": 14, "50": 14, "1000": 14, "60": 14, "500": 14, "guarante": 14, "toward": 14, "conform": 14, "150": 14, "160": 14, "155": 14, "153": 14, "about": 14, "rate": 14, "goal": 14, "computation": 14, "fewest": 14, "__bool__": 14, "good": 14, "greatli": 14, "speed": 14, "li": 14, "outsid": 14, "best_match": 14, "thu": 14, "feasibl": 14, "goal_test": 14, "remove_best": 14, "therefor": [14, 20, 22], "reach": 14, "your": 14, "produc": [14, 22], "interleav": 15, "jsonlistformatt": [15, 21, 23], "jsondictformatt": [15, 21, 23], "counter": 16, "__add__": 16, "count": 16, "abbb": 16, "bcc": 16, "__and__": 16, "__delitem__": 16, "elem": 16, "miss": 16, "__iadd__": 16, "inplac": 16, "__iand__": 16, "__ior__": 16, "maximum": 16, "__isub__": 16, "abbbc": 16, "bccd": 16, "__missing__": 16, "__neg__": 16, "strip": 16, "flip": 16, "sign": 16, "__or__": 16, "__pos__": 16, "__sub__": 16, "_keep_posit": 16, "intern": [16, 24], "abcabc": 16, "knuth": 16, "prime": 16, "factor": 16, "1836": 16, "17": 16, "prime_factor": 16, "product": 16, "loop": 16, "multipli": 16, "fromkei": 16, "v": 16, "view": 16, "most_common": 16, "common": 16, "abracadabra": 16, "r": 16, "popitem": 16, "lifo": 16, "setdefault": 16, "replac": [16, 21, 23], "reduc": 16, "below": 16, "witch": 16, "watch": 16, "h": 16, "minu": 16, "ordereddict": 16, "rememb": 16, "encount": 16, "And": 16, "gallahad": 16, "od": 16, "move_to_end": 16, "move": 16, "fifo": 16, "num_row": 16, "num_col": 16, "default_valu": 16, "mutablemap": 16, "spars": 16, "matric": 16, "homogen": 16, "sparsematrixrow": 16, "row_num": 16, "col": 16, "indexerror": 16, "content": 16, "approxim": 16, "memori": 16, "hold": 16, "shape": 16, "lack": 16, "footprint": 16, "matrox": 16, "num_filled_el": 16, "explicitli": 16, "prefix": 16, "suffix": 16, "temporari": 16, "clean": 16, "tmp": 16, "var": 16, "folder": 16, "bs": 16, "hrvzrctx6tg2_j17gb6wckph0000gn": 16, "tmpkza5fvr_": 16, "__exit__": 16, "traceback": 16, "filenam": 16, "hasattr": 16, "measur": 16, "central": 17, "inform": 17, "setup": 17, "py": 17, "document": [17, 22], "dev_build": 17, "coincid": 17, "releas": 17, "deploi": 17, "pypi": 17, "git": 17, "branch": 17, "__version__": 17, "major": 17, "minor": 17, "revis": 17, "version_str": 17, "codebas": 17, "ref": 17, "q": 17, "parser": 18, "etre": 18, "elementtre": 18, "xhtml": 18, "tag": 18, "attrib": 18, "attrib_edit": 18, "child_edit": 18, "tag_edit": 18, "text_edit": 18, "path_or_element_tre": 18, "vnd": 19, "has_newlin": 19, "polynomi": 20, "tractabl": 20, "restrict": 20, "class": [20, 21, 22, 23], "dag": 20, "forest": 20, "constraint": 20, "exploit": 20, "particular": 20, "challeng": 20, "extant": 20, "util": [20, 22, 23], "take": 20, "zab": 20, "woo": 20, "foobar": 20, "tool": 20, "canonic": 20, "per": 20, "tradit": 20, "cat": 20, "jq": 20, "u": 20, "Not": 20, "entir": 20, "particularli": 20, "larg": 20, "break": 20, "wagner": 20, "fischer": 20, "destin": 20, "http": 20, "en": 20, "wikipedia": 20, "org": 20, "wiki": 20, "graph_isomorphism_problem": 20, "directed_acyclic_graph": 20, "online_algorithm": 20, "constructive_proof": 20, "levenshtein_dist": [20, 21, 23], "e2": 20, "80": 20, "93fischer_algorithm": 20, "assignment_problem": 20, "np": 20, "purpos": 21, "merg": 21, "csv": [21, 23], "portmanteau": 21, "graftag": 21, "togeth": 21, "grow": 21, "why": [21, 23], "focus": 21, "instruct": 21, "github": 21, "page": 21, "footnot": 21, "constantcostedit": [21, 23], "editcollect": [21, 23], "editsequ": [21, 23], "filetypewatch": [21, 23], "fixedkeydictnod": [21, 23], "fixedkeydictnodeedit": [21, 23], "keyvaluepairedit": [21, 23], "nullnod": [21, 23], "possibleedit": [21, 23], "explode_edit": [21, 23], "get_filetyp": [21, 23], "string_edit_dist": [21, 23], "boundedcompar": [21, 23], "constantbound": [21, 23], "infin": [21, 23], "min_bound": [21, 23], "repeat_until_tighten": [21, 23], "csvformatt": [21, 23], "csvnode": [21, 23], "csvrow": [21, 23], "csvrowformatt": [21, 23], "closebracket": [21, 23], "closeparen": [21, 23], "collectioninfo": [21, 23], "comma": [21, 23], "fixedsizecollect": [21, 23], "floattoken": [21, 23], "functioncal": [21, 23], "identifiertoken": [21, 23], "integertoken": [21, 23], "numerictoken": [21, 23], "openbracket": [21, 23], "openparen": [21, 23], "operatortoken": [21, 23], "pairedendtoken": [21, 23], "pairedstarttoken": [21, 23], "pairedtoken": [21, 23], "parenthesi": [21, 23], "parseerror": [21, 23], "stringtoken": [21, 23], "token": [21, 23], "get_memb": [21, 23], "infix_to_rpn": [21, 23], "fibonacci": [21, 23], "heapnod": [21, 23], "maxfibonacciheap": [21, 23], "reversedcompar": [21, 23], "basicformatt": [21, 23], "json5": [21, 23], "jsonstringformatt": [21, 23], "edg": [21, 23], "matchingfromnod": [21, 23], "matchingnod": [21, 23], "matchingtonod": [21, 23], "pathset": [21, 23], "queueelement": [21, 23], "sortededg": [21, 23], "weightedbipartitematcherpartial_implement": [21, 23], "get_dtyp": [21, 23], "min_weight_bipartite_match": [21, 23], "plist": [21, 23], "plistformatt": [21, 23], "plistnod": [21, 23], "plistsequenceformatt": [21, 23], "ansicontext": [21, 23], "combiningmarkcontext": [21, 23], "combiningmarkwrit": [21, 23], "htmlansicontext": [21, 23], "htmlprinter": [21, 23], "nullansicontext": [21, 23], "rawwrit": [21, 23], "only_ansi": [21, 23], "fixedlengthsequenceedit": [21, 23], "orderedcount": [21, 23], "sparsematrix": [21, 23], "tempfil": [21, 23], "getsizeof": [21, 23], "largest": [21, 23], "git_branch": [21, 23], "xmlchildformatt": [21, 23], "xmlelementattribformatt": [21, 23], "xmlelementedit": [21, 23], "xmlelementobj": [21, 23], "xmlformatt": [21, 23], "xmlstringformatt": [21, 23], "yamldictformatt": [21, 23], "yamlformatt": [21, 22, 23], "yamlkeyvaluepairformatt": [21, 23], "yamllistformatt": [21, 23], "yamlstringformatt": [21, 23], "standard": 22, "from_tre": 22, "to_tre": 22, "maintain": 22, "characterist": 22, "instanceof": 22, "too": 22, "editeddictnod": 22, "editedkeyvaluepairnod": 22, "editedstringnod": 22, "editedlistnod": 22, "editedintegernod": 22, "chose": 22, "did": 22, "respons": 22, "syntax": 22, "independ": 22, "thank": 22, "graphtag": 24, "try": 24, "fail": 24, "warn": 24}, "objects": {"": [[1, 0, 0, "-", "graphtage"]], "graphtage": [[1, 1, 1, "", "AbstractCompoundEdit"], [1, 1, 1, "", "AbstractEdit"], [1, 1, 1, "", "BoolNode"], [1, 1, 1, "", "BuildOptions"], [1, 1, 1, "", "CompoundEdit"], [1, 1, 1, "", "ConstantCostEdit"], [1, 1, 1, "", "ContainerNode"], [1, 1, 1, "", "DictNode"], [1, 1, 1, "", "Edit"], [1, 1, 1, "", "EditCollection"], [1, 1, 1, "", "EditSequence"], [1, 1, 1, "", "EditedTreeNode"], [1, 1, 1, "", "Filetype"], [1, 1, 1, "", "FiletypeWatcher"], [1, 1, 1, "", "FixedKeyDictNode"], [1, 1, 1, "", "FixedKeyDictNodeEdit"], [1, 1, 1, "", "FloatNode"], [1, 1, 1, "", "GraphtageFormatter"], [1, 1, 1, "", "Insert"], [1, 1, 1, "", "IntegerNode"], [1, 1, 1, "", "KeyValuePairEdit"], [1, 1, 1, "", "KeyValuePairNode"], [1, 1, 1, "", "LeafNode"], [1, 1, 1, "", "ListNode"], [1, 1, 1, "", "MappingNode"], [1, 1, 1, "", "Match"], [1, 1, 1, "", "MultiSetNode"], [1, 1, 1, "", "NullNode"], [1, 1, 1, "", "PossibleEdits"], [1, 1, 1, "", "Remove"], [1, 1, 1, "", "Replace"], [1, 1, 1, "", "StringEdit"], [1, 1, 1, "", "StringFormatter"], [1, 1, 1, "", "StringNode"], [1, 1, 1, "", "TreeNode"], [2, 0, 0, "-", "bounds"], [3, 0, 0, "-", "csv"], [1, 5, 1, "", "explode_edits"], [4, 0, 0, "-", "expressions"], [5, 0, 0, "-", "fibonacci"], [6, 0, 0, "-", "formatter"], [1, 5, 1, "", "get_filetype"], [7, 0, 0, "-", "json"], [8, 0, 0, "-", "levenshtein"], [9, 0, 0, "-", "matching"], [10, 0, 0, "-", "multiset"], [11, 0, 0, "-", "plist"], [12, 0, 0, "-", "printer"], [13, 0, 0, "-", "progress"], [14, 0, 0, "-", "search"], [15, 0, 0, "-", "sequences"], [1, 5, 1, "", "string_edit_distance"], [16, 0, 0, "-", "utils"], [17, 0, 0, "-", "version"], [18, 0, 0, "-", "xml"], [19, 0, 0, "-", "yaml"]], "graphtage.AbstractCompoundEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.AbstractEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.BoolNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.BuildOptions": [[1, 2, 1, "", "__getattr__"], [1, 2, 1, "", "__init__"]], "graphtage.CompoundEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.ConstantCostEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.ContainerNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.DictNode": [[1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.Edit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "id0", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "id1", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditCollection": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditSequence": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.EditedTreeNode": [[1, 2, 1, "", "__init__"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_cost"]], "graphtage.Filetype": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "build_tree"], [1, 2, 1, "", "build_tree_handling_errors"], [1, 2, 1, "", "get_default_formatter"]], "graphtage.FiletypeWatcher": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__instancecheck__"], [1, 2, 1, "", "__subclasscheck__"], [1, 2, 1, "", "_abc_caches_clear"], [1, 2, 1, "", "_abc_registry_clear"], [1, 2, 1, "", "_dump_registry"], [1, 2, 1, "", "mro"], [1, 2, 1, "", "register"]], "graphtage.FixedKeyDictNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__len__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.FixedKeyDictNodeEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 4, 1, "", "sequence"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.FloatNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.GraphtageFormatter": [[1, 3, 1, "", "DEFAULT_INSTANCE"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "get_formatter"], [1, 3, 1, "", "is_partial"], [1, 3, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 4, 1, "", "root"], [1, 3, 1, "", "sub_format_types"], [1, 3, 1, "", "sub_formatters"]], "graphtage.Insert": [[1, 3, 1, "", "INSERT_STRING"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 4, 1, "", "insert_into"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "to_insert"], [1, 4, 1, "", "valid"]], "graphtage.IntegerNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.KeyValuePairEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.KeyValuePairNode": [[1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.LeafNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.ListNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__len__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.MappingNode": [[1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "items"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.Match": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.MultiSetNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "all_children_are_leaves"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 4, 1, "", "container_type"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.NullNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.PossibleEdits": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "best_possibility"], [1, 2, 1, "", "bounds"], [1, 2, 1, "", "edits"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.Remove": [[1, 3, 1, "", "REMOVE_STRING"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.Replace": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.StringEdit": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "bounds"], [1, 3, 1, "", "from_node"], [1, 2, 1, "", "has_non_zero_cost"], [1, 3, 1, "", "initial_bounds"], [1, 2, 1, "", "is_complete"], [1, 2, 1, "", "on_diff"], [1, 2, 1, "", "print"], [1, 2, 1, "", "tighten_bounds"], [1, 4, 1, "", "valid"]], "graphtage.StringFormatter": [[1, 3, 1, "", "DEFAULT_INSTANCE"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__new__"], [1, 2, 1, "", "context"], [1, 2, 1, "", "escape"], [1, 2, 1, "", "get_formatter"], [1, 3, 1, "", "is_partial"], [1, 3, 1, "", "is_quoted"], [1, 3, 1, "", "parent"], [1, 2, 1, "", "print"], [1, 2, 1, "", "print_StringEdit"], [1, 2, 1, "", "print_StringNode"], [1, 4, 1, "", "root"], [1, 3, 1, "", "sub_format_types"], [1, 3, 1, "", "sub_formatters"], [1, 2, 1, "", "write_char"], [1, 2, 1, "", "write_end_quote"], [1, 2, 1, "", "write_start_quote"]], "graphtage.StringNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.TreeNode": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "calculate_total_size"], [1, 2, 1, "", "children"], [1, 2, 1, "", "dfs"], [1, 2, 1, "", "diff"], [1, 3, 1, "", "edit_modifiers"], [1, 2, 1, "", "editable_dict"], [1, 4, 1, "", "edited"], [1, 2, 1, "", "edited_type"], [1, 2, 1, "", "edits"], [1, 2, 1, "", "get_all_edits"], [1, 4, 1, "", "is_leaf"], [1, 2, 1, "", "make_edited"], [1, 2, 1, "", "print"], [1, 2, 1, "", "to_obj"], [1, 4, 1, "", "total_size"]], "graphtage.bounds": [[2, 1, 1, "", "Bounded"], [2, 1, 1, "", "BoundedComparator"], [2, 1, 1, "", "ConstantBound"], [2, 1, 1, "", "Infinity"], [2, 3, 1, "", "NEGATIVE_INFINITY"], [2, 3, 1, "", "POSITIVE_INFINITY"], [2, 1, 1, "", "Range"], [2, 5, 1, "", "make_distinct"], [2, 5, 1, "", "min_bounded"], [2, 5, 1, "", "repeat_until_tightened"], [2, 5, 1, "", "sort"]], "graphtage.bounds.Bounded": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "bounds"], [2, 2, 1, "", "tighten_bounds"]], "graphtage.bounds.BoundedComparator": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "__lt__"], [2, 3, 1, "", "bounded"]], "graphtage.bounds.ConstantBound": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "bounds"], [2, 2, 1, "", "tighten_bounds"]], "graphtage.bounds.Infinity": [[2, 2, 1, "", "__init__"], [2, 4, 1, "", "positive"]], "graphtage.bounds.Range": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "definitive"], [2, 2, 1, "", "dominates"], [2, 4, 1, "", "finite"], [2, 2, 1, "", "intersect"], [2, 3, 1, "", "lower_bound"], [2, 2, 1, "", "to_interval"], [2, 3, 1, "", "upper_bound"]], "graphtage.csv": [[3, 1, 1, "", "CSV"], [3, 1, 1, "", "CSVFormatter"], [3, 1, 1, "", "CSVNode"], [3, 1, 1, "", "CSVRow"], [3, 1, 1, "", "CSVRowFormatter"], [3, 1, 1, "", "CSVRows"], [3, 5, 1, "", "build_tree"]], "graphtage.csv.CSV": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "build_tree"], [3, 2, 1, "", "build_tree_handling_errors"], [3, 2, 1, "", "get_default_formatter"]], "graphtage.csv.CSVFormatter": [[3, 3, 1, "", "DEFAULT_INSTANCE"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "get_formatter"], [3, 3, 1, "", "is_partial"], [3, 3, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_LeafNode"], [3, 4, 1, "", "root"], [3, 3, 1, "", "sub_format_types"], [3, 3, 1, "", "sub_formatters"]], "graphtage.csv.CSVNode": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__len__"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 4, 1, "", "container_type"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 3, 1, "", "edit_modifiers"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edited_type"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 2, 1, "", "print"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.csv.CSVRow": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__iter__"], [3, 2, 1, "", "__len__"], [3, 2, 1, "", "all_children_are_leaves"], [3, 2, 1, "", "calculate_total_size"], [3, 2, 1, "", "children"], [3, 4, 1, "", "container_type"], [3, 2, 1, "", "dfs"], [3, 2, 1, "", "diff"], [3, 3, 1, "", "edit_modifiers"], [3, 2, 1, "", "editable_dict"], [3, 4, 1, "", "edited"], [3, 2, 1, "", "edited_type"], [3, 2, 1, "", "edits"], [3, 2, 1, "", "get_all_edits"], [3, 4, 1, "", "is_leaf"], [3, 2, 1, "", "make_edited"], [3, 2, 1, "", "print"], [3, 2, 1, "", "to_obj"], [3, 4, 1, "", "total_size"]], "graphtage.csv.CSVRowFormatter": [[3, 3, 1, "", "DEFAULT_INSTANCE"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "edit_print"], [3, 2, 1, "", "get_formatter"], [3, 3, 1, "", "is_partial"], [3, 2, 1, "", "item_newline"], [3, 2, 1, "", "items_indent"], [3, 3, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_CSVRow"], [3, 2, 1, "", "print_SequenceNode"], [3, 4, 1, "", "root"], [3, 3, 1, "", "sub_format_types"], [3, 3, 1, "", "sub_formatters"]], "graphtage.csv.CSVRows": [[3, 3, 1, "", "DEFAULT_INSTANCE"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__new__"], [3, 2, 1, "", "edit_print"], [3, 2, 1, "", "get_formatter"], [3, 3, 1, "", "is_partial"], [3, 2, 1, "", "item_newline"], [3, 2, 1, "", "items_indent"], [3, 3, 1, "", "parent"], [3, 2, 1, "", "print"], [3, 2, 1, "", "print_CSVNode"], [3, 2, 1, "", "print_SequenceNode"], [3, 4, 1, "", "root"], [3, 3, 1, "", "sub_format_types"], [3, 3, 1, "", "sub_formatters"]], "graphtage.expressions": [[4, 1, 1, "", "CloseBracket"], [4, 1, 1, "", "CloseParen"], [4, 1, 1, "", "CollectionInfo"], [4, 1, 1, "", "Comma"], [4, 3, 1, "", "DEFAULT_GLOBALS"], [4, 1, 1, "", "Expression"], [4, 1, 1, "", "FixedSizeCollection"], [4, 1, 1, "", "FloatToken"], [4, 1, 1, "", "FunctionCall"], [4, 3, 1, "", "IDENTIFIER_BYTES"], [4, 1, 1, "", "IdentifierToken"], [4, 1, 1, "", "IntegerToken"], [4, 1, 1, "", "NumericToken"], [4, 3, 1, "", "OPERATORS_BY_NAME"], [4, 1, 1, "", "OpenBracket"], [4, 1, 1, "", "OpenParen"], [4, 1, 1, "", "Operator"], [4, 1, 1, "", "OperatorToken"], [4, 1, 1, "", "PairedEndToken"], [4, 1, 1, "", "PairedStartToken"], [4, 1, 1, "", "PairedToken"], [4, 1, 1, "", "Parenthesis"], [4, 1, 1, "", "ParseError"], [4, 1, 1, "", "StringToken"], [4, 1, 1, "", "Token"], [4, 1, 1, "", "Tokenizer"], [4, 5, 1, "", "get_member"], [4, 5, 1, "", "infix_to_rpn"], [4, 5, 1, "", "parse"], [4, 5, 1, "", "tokenize"]], "graphtage.expressions.CloseBracket": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "start_token_type"]], "graphtage.expressions.CloseParen": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "start_token_type"]], "graphtage.expressions.CollectionInfo": [[4, 2, 1, "", "__init__"]], "graphtage.expressions.Comma": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.Expression": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "eval"], [4, 2, 1, "", "get_value"]], "graphtage.expressions.FixedSizeCollection": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "container_type"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "size"]], "graphtage.expressions.FloatToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "value"]], "graphtage.expressions.FunctionCall": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 3, 1, "", "op"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.IdentifierToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.IntegerToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "value"]], "graphtage.expressions.NumericToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"], [4, 3, 1, "", "value"]], "graphtage.expressions.OpenBracket": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "discard"], [4, 3, 1, "", "is_list"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 3, 1, "", "op"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.OpenParen": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "discard"], [4, 3, 1, "", "name"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.Operator": [[4, 3, 1, "", "ADDITION"], [4, 3, 1, "", "BITWISE_AND"], [4, 3, 1, "", "BITWISE_LEFT_SHIFT"], [4, 3, 1, "", "BITWISE_NOT"], [4, 3, 1, "", "BITWISE_OR"], [4, 3, 1, "", "BITWISE_RIGHT_SHIFT"], [4, 3, 1, "", "BITWISE_XOR"], [4, 3, 1, "", "DIVISION"], [4, 3, 1, "", "EQUALS"], [4, 3, 1, "", "FUNCTION_CALL"], [4, 3, 1, "", "GETITEM"], [4, 3, 1, "", "GREATER_THAN"], [4, 3, 1, "", "GREATER_THAN_EQUAL"], [4, 3, 1, "", "IN"], [4, 3, 1, "", "INT_DIVISION"], [4, 3, 1, "", "LESS_THAN"], [4, 3, 1, "", "LESS_THAN_EQUAL"], [4, 3, 1, "", "LOGICAL_AND"], [4, 3, 1, "", "LOGICAL_NOT"], [4, 3, 1, "", "LOGICAL_OR"], [4, 3, 1, "", "MEMBER_ACCESS"], [4, 3, 1, "", "MULTIPLICATION"], [4, 3, 1, "", "NOT_EQUAL"], [4, 3, 1, "", "REMAINDER"], [4, 3, 1, "", "SUBTRACTION"], [4, 3, 1, "", "TERNARY_CONDITIONAL"], [4, 3, 1, "", "TERNARY_ELSE"], [4, 3, 1, "", "UNARY_MINUS"], [4, 3, 1, "", "UNARY_PLUS"], [4, 2, 1, "", "__init__"], [4, 3, 1, "", "arity"], [4, 3, 1, "", "execute"], [4, 3, 1, "", "expand"], [4, 3, 1, "", "left_associative"], [4, 3, 1, "", "priority"], [4, 3, 1, "", "token"]], "graphtage.expressions.OperatorToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 3, 1, "", "op"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.PairedEndToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "start_token_type"]], "graphtage.expressions.PairedStartToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "discard"], [4, 3, 1, "", "name"]], "graphtage.expressions.PairedToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"]], "graphtage.expressions.Parenthesis": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.ParseError": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "args"], [4, 2, 1, "", "with_traceback"]], "graphtage.expressions.StringToken": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.Token": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "offset"], [4, 4, 1, "", "raw_token"]], "graphtage.expressions.Tokenizer": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__iter__"], [4, 2, 1, "", "has_next"], [4, 2, 1, "", "next"], [4, 2, 1, "", "peek"], [4, 3, 1, "", "prev_token"]], "graphtage.fibonacci": [[5, 1, 1, "", "FibonacciHeap"], [5, 1, 1, "", "HeapNode"], [5, 1, 1, "", "MaxFibonacciHeap"], [5, 1, 1, "", "ReversedComparator"]], "graphtage.fibonacci.FibonacciHeap": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "clear"], [5, 2, 1, "", "decrease_key"], [5, 3, 1, "", "key"], [5, 4, 1, "", "min_node"], [5, 2, 1, "", "nodes"], [5, 2, 1, "", "peek"], [5, 2, 1, "", "pop"], [5, 2, 1, "", "push"], [5, 2, 1, "", "remove"]], "graphtage.fibonacci.HeapNode": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "add_child"], [5, 3, 1, "", "child"], [5, 4, 1, "", "children"], [5, 3, 1, "", "degree"], [5, 3, 1, "", "deleted"], [5, 3, 1, "", "item"], [5, 3, 1, "", "key"], [5, 3, 1, "", "left"], [5, 3, 1, "", "mark"], [5, 3, 1, "", "parent"], [5, 2, 1, "", "remove_child"], [5, 3, 1, "", "right"], [5, 4, 1, "", "siblings"]], "graphtage.fibonacci.MaxFibonacciHeap": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "clear"], [5, 2, 1, "", "decrease_key"], [5, 3, 1, "", "key"], [5, 4, 1, "", "min_node"], [5, 2, 1, "", "nodes"], [5, 2, 1, "", "peek"], [5, 2, 1, "", "pop"], [5, 2, 1, "", "push"], [5, 2, 1, "", "remove"]], "graphtage.fibonacci.ReversedComparator": [[5, 2, 1, "", "__init__"]], "graphtage.formatter": [[6, 1, 1, "", "BasicFormatter"], [6, 1, 1, "", "Formatter"], [6, 1, 1, "", "FormatterChecker"], [6, 5, 1, "", "get_formatter"]], "graphtage.formatter.BasicFormatter": [[6, 3, 1, "", "DEFAULT_INSTANCE"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "__new__"], [6, 2, 1, "", "get_formatter"], [6, 3, 1, "", "is_partial"], [6, 3, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 4, 1, "", "root"], [6, 3, 1, "", "sub_format_types"], [6, 3, 1, "", "sub_formatters"]], "graphtage.formatter.Formatter": [[6, 3, 1, "", "DEFAULT_INSTANCE"], [6, 2, 1, "", "__init__"], [6, 2, 1, "", "__new__"], [6, 2, 1, "", "get_formatter"], [6, 3, 1, "", "is_partial"], [6, 3, 1, "", "parent"], [6, 2, 1, "", "print"], [6, 4, 1, "", "root"], [6, 3, 1, "", "sub_format_types"], [6, 3, 1, "", "sub_formatters"]], "graphtage.formatter.FormatterChecker": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "__instancecheck__"], [6, 2, 1, "", "__subclasscheck__"], [6, 2, 1, "", "_abc_caches_clear"], [6, 2, 1, "", "_abc_registry_clear"], [6, 2, 1, "", "_dump_registry"], [6, 2, 1, "", "mro"], [6, 2, 1, "", "register"]], "graphtage.json": [[7, 1, 1, "", "JSON"], [7, 1, 1, "", "JSON5"], [7, 1, 1, "", "JSONDictFormatter"], [7, 1, 1, "", "JSONFormatter"], [7, 1, 1, "", "JSONListFormatter"], [7, 1, 1, "", "JSONStringFormatter"], [7, 5, 1, "", "build_tree"]], "graphtage.json.JSON": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "build_tree"], [7, 2, 1, "", "build_tree_handling_errors"], [7, 2, 1, "", "get_default_formatter"]], "graphtage.json.JSON5": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "build_tree"], [7, 2, 1, "", "build_tree_handling_errors"], [7, 2, 1, "", "get_default_formatter"]], "graphtage.json.JSONDictFormatter": [[7, 3, 1, "", "DEFAULT_INSTANCE"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [7, 2, 1, "", "edit_print"], [7, 2, 1, "", "get_formatter"], [7, 3, 1, "", "is_partial"], [7, 2, 1, "", "item_newline"], [7, 2, 1, "", "items_indent"], [7, 3, 1, "", "parent"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_MappingNode"], [7, 2, 1, "", "print_MultiSetNode"], [7, 2, 1, "", "print_SequenceNode"], [7, 4, 1, "", "root"], [7, 3, 1, "", "sub_format_types"], [7, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONFormatter": [[7, 3, 1, "", "DEFAULT_INSTANCE"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [7, 2, 1, "", "get_formatter"], [7, 3, 1, "", "is_partial"], [7, 3, 1, "", "parent"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_ContainerNode"], [7, 2, 1, "", "print_KeyValuePairNode"], [7, 2, 1, "", "print_LeafNode"], [7, 2, 1, "", "print_XMLElement"], [7, 4, 1, "", "root"], [7, 3, 1, "", "sub_format_types"], [7, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONListFormatter": [[7, 3, 1, "", "DEFAULT_INSTANCE"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [7, 2, 1, "", "edit_print"], [7, 2, 1, "", "get_formatter"], [7, 3, 1, "", "is_partial"], [7, 2, 1, "", "item_newline"], [7, 2, 1, "", "items_indent"], [7, 3, 1, "", "parent"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_ListNode"], [7, 2, 1, "", "print_SequenceNode"], [7, 4, 1, "", "root"], [7, 3, 1, "", "sub_format_types"], [7, 3, 1, "", "sub_formatters"]], "graphtage.json.JSONStringFormatter": [[7, 3, 1, "", "DEFAULT_INSTANCE"], [7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [7, 2, 1, "", "context"], [7, 2, 1, "", "escape"], [7, 2, 1, "", "get_formatter"], [7, 3, 1, "", "is_partial"], [7, 3, 1, "", "is_quoted"], [7, 3, 1, "", "parent"], [7, 2, 1, "", "print"], [7, 2, 1, "", "print_StringEdit"], [7, 2, 1, "", "print_StringNode"], [7, 4, 1, "", "root"], [7, 3, 1, "", "sub_format_types"], [7, 3, 1, "", "sub_formatters"], [7, 2, 1, "", "write_char"], [7, 2, 1, "", "write_end_quote"], [7, 2, 1, "", "write_start_quote"]], "graphtage.levenshtein": [[8, 1, 1, "", "EditDistance"], [8, 5, 1, "", "levenshtein_distance"]], "graphtage.levenshtein.EditDistance": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "__iter__"], [8, 2, 1, "", "__lt__"], [8, 2, 1, "", "bounds"], [8, 2, 1, "", "edits"], [8, 3, 1, "", "from_node"], [8, 2, 1, "", "has_non_zero_cost"], [8, 3, 1, "", "initial_bounds"], [8, 2, 1, "", "is_complete"], [8, 2, 1, "", "on_diff"], [8, 2, 1, "", "print"], [8, 4, 1, "", "sequence"], [8, 2, 1, "", "tighten_bounds"], [8, 4, 1, "", "valid"]], "graphtage.matching": [[9, 1, 1, "", "Edge"], [9, 1, 1, "", "Matching"], [9, 1, 1, "", "MatchingFromNode"], [9, 1, 1, "", "MatchingNode"], [9, 1, 1, "", "MatchingToNode"], [9, 1, 1, "", "PathSet"], [9, 1, 1, "", "QueueElement"], [9, 1, 1, "", "SortedEdges"], [9, 1, 1, "", "WeightedBipartiteMatcher"], [9, 1, 1, "", "WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION"], [9, 5, 1, "", "get_dtype"], [9, 5, 1, "", "min_weight_bipartite_matching"]], "graphtage.matching.Edge": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "bounds"], [9, 4, 1, "", "cost_bar"], [9, 4, 1, "", "cost_star"], [9, 2, 1, "", "tighten_bounds"]], "graphtage.matching.Matching": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "_from_iterable"], [9, 2, 1, "", "_hash"], [9, 2, 1, "", "add"], [9, 2, 1, "", "bounds"], [9, 2, 1, "", "clear"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "difference"], [9, 2, 1, "", "difference_update"], [9, 2, 1, "", "discard"], [9, 2, 1, "", "intersection"], [9, 2, 1, "", "intersection_update"], [9, 2, 1, "", "isdisjoint"], [9, 2, 1, "", "issubset"], [9, 2, 1, "", "issuperset"], [9, 2, 1, "", "pop"], [9, 2, 1, "", "remove"], [9, 2, 1, "", "symmetric_difference"], [9, 2, 1, "", "symmetric_difference_update"], [9, 2, 1, "", "tighten_bounds"], [9, 2, 1, "", "union"], [9, 2, 1, "", "update"]], "graphtage.matching.MatchingFromNode": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "construct_edges"], [9, 2, 1, "", "edges"], [9, 4, 1, "", "sorted_neighbors"]], "graphtage.matching.MatchingNode": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "construct_edges"], [9, 2, 1, "", "edges"]], "graphtage.matching.MatchingToNode": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "construct_edges"], [9, 2, 1, "", "edges"]], "graphtage.matching.PathSet": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "_from_iterable"], [9, 2, 1, "", "_hash"], [9, 2, 1, "", "add"], [9, 2, 1, "", "bounds"], [9, 2, 1, "", "clear"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "difference"], [9, 2, 1, "", "difference_update"], [9, 2, 1, "", "discard"], [9, 2, 1, "", "intersection"], [9, 2, 1, "", "intersection_update"], [9, 2, 1, "", "isdisjoint"], [9, 2, 1, "", "issubset"], [9, 2, 1, "", "issuperset"], [9, 2, 1, "", "path_to"], [9, 2, 1, "", "pop"], [9, 2, 1, "", "remove"], [9, 2, 1, "", "symmetric_difference"], [9, 2, 1, "", "symmetric_difference_update"], [9, 2, 1, "", "tighten_bounds"], [9, 2, 1, "", "union"], [9, 2, 1, "", "update"]], "graphtage.matching.QueueElement": [[9, 2, 1, "", "__init__"]], "graphtage.matching.SortedEdges": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "head"], [9, 2, 1, "", "tail"]], "graphtage.matching.WeightedBipartiteMatcher": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "bounds"], [9, 4, 1, "", "edges"], [9, 2, 1, "", "is_complete"], [9, 4, 1, "", "matching"], [9, 2, 1, "", "tighten_bounds"]], "graphtage.matching.WeightedBipartiteMatcherPARTIAL_IMPLEMENTATION": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "bounds"], [9, 2, 1, "", "free_destinations"], [9, 2, 1, "", "free_sources"], [9, 2, 1, "", "tighten_bounds"]], "graphtage.multiset": [[10, 1, 1, "", "MultiSetEdit"]], "graphtage.multiset.MultiSetEdit": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "__iter__"], [10, 2, 1, "", "__lt__"], [10, 2, 1, "", "bounds"], [10, 2, 1, "", "edits"], [10, 3, 1, "", "from_node"], [10, 2, 1, "", "has_non_zero_cost"], [10, 3, 1, "", "initial_bounds"], [10, 2, 1, "", "is_complete"], [10, 2, 1, "", "on_diff"], [10, 2, 1, "", "print"], [10, 4, 1, "", "sequence"], [10, 2, 1, "", "tighten_bounds"], [10, 3, 1, "", "to_insert"], [10, 3, 1, "", "to_remove"], [10, 4, 1, "", "valid"]], "graphtage.plist": [[11, 1, 1, "", "PLIST"], [11, 1, 1, "", "PLISTFormatter"], [11, 1, 1, "", "PLISTNode"], [11, 1, 1, "", "PLISTSequenceFormatter"], [11, 5, 1, "", "build_tree"]], "graphtage.plist.PLIST": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "build_tree"], [11, 2, 1, "", "build_tree_handling_errors"], [11, 2, 1, "", "get_default_formatter"]], "graphtage.plist.PLISTFormatter": [[11, 3, 1, "", "DEFAULT_INSTANCE"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "__new__"], [11, 2, 1, "", "get_formatter"], [11, 3, 1, "", "is_partial"], [11, 3, 1, "", "parent"], [11, 2, 1, "", "print"], [11, 2, 1, "", "print_BoolNode"], [11, 2, 1, "", "print_FloatNode"], [11, 2, 1, "", "print_IntegerNode"], [11, 2, 1, "", "print_LeafNode"], [11, 2, 1, "", "print_PLISTNode"], [11, 2, 1, "", "print_StringNode"], [11, 4, 1, "", "root"], [11, 3, 1, "", "sub_format_types"], [11, 3, 1, "", "sub_formatters"], [11, 2, 1, "", "write_obj"]], "graphtage.plist.PLISTNode": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "all_children_are_leaves"], [11, 2, 1, "", "calculate_total_size"], [11, 2, 1, "", "children"], [11, 2, 1, "", "dfs"], [11, 2, 1, "", "diff"], [11, 3, 1, "", "edit_modifiers"], [11, 2, 1, "", "editable_dict"], [11, 4, 1, "", "edited"], [11, 2, 1, "", "edited_type"], [11, 2, 1, "", "edits"], [11, 2, 1, "", "get_all_edits"], [11, 4, 1, "", "is_leaf"], [11, 2, 1, "", "make_edited"], [11, 2, 1, "", "print"], [11, 2, 1, "", "to_obj"], [11, 4, 1, "", "total_size"]], "graphtage.plist.PLISTSequenceFormatter": [[11, 3, 1, "", "DEFAULT_INSTANCE"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "__new__"], [11, 2, 1, "", "edit_print"], [11, 2, 1, "", "get_formatter"], [11, 3, 1, "", "is_partial"], [11, 2, 1, "", "item_newline"], [11, 2, 1, "", "items_indent"], [11, 3, 1, "", "parent"], [11, 2, 1, "", "print"], [11, 2, 1, "", "print_KeyValuePairNode"], [11, 2, 1, "", "print_ListNode"], [11, 2, 1, "", "print_MappingNode"], [11, 2, 1, "", "print_MultiSetNode"], [11, 2, 1, "", "print_SequenceNode"], [11, 4, 1, "", "root"], [11, 3, 1, "", "sub_format_types"], [11, 3, 1, "", "sub_formatters"]], "graphtage.printer": [[12, 1, 1, "", "ANSIContext"], [12, 1, 1, "", "CombiningMarkContext"], [12, 1, 1, "", "CombiningMarkWriter"], [12, 3, 1, "", "DEFAULT_PRINTER"], [12, 1, 1, "", "HTMLANSIContext"], [12, 1, 1, "", "HTMLPrinter"], [12, 1, 1, "", "NullANSIContext"], [12, 1, 1, "", "Printer"], [12, 1, 1, "", "RawWriter"], [12, 1, 1, "", "Writer"], [12, 5, 1, "", "only_ansi"]], "graphtage.printer.ANSIContext": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "back"], [12, 2, 1, "", "background"], [12, 2, 1, "", "bright"], [12, 2, 1, "", "color"], [12, 2, 1, "", "dim"], [12, 4, 1, "", "end_code"], [12, 4, 1, "", "fore"], [12, 3, 1, "", "is_applied"], [12, 4, 1, "", "parent"], [12, 4, 1, "", "root"], [12, 4, 1, "", "start_code"], [12, 4, 1, "", "style"]], "graphtage.printer.CombiningMarkContext": [[12, 2, 1, "", "__init__"]], "graphtage.printer.CombiningMarkWriter": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "add"], [12, 2, 1, "", "context"], [12, 3, 1, "", "enabled"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "isatty"], [12, 4, 1, "", "marks"], [12, 4, 1, "", "marks_str"], [12, 3, 1, "", "parent"], [12, 2, 1, "", "raw_write"], [12, 2, 1, "", "remove"], [12, 2, 1, "", "write"]], "graphtage.printer.HTMLANSIContext": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "back"], [12, 2, 1, "", "background"], [12, 2, 1, "", "bright"], [12, 2, 1, "", "color"], [12, 2, 1, "", "dim"], [12, 4, 1, "", "end_code"], [12, 4, 1, "", "fore"], [12, 2, 1, "", "get_back"], [12, 2, 1, "", "get_fore"], [12, 3, 1, "", "is_applied"], [12, 4, 1, "", "parent"], [12, 4, 1, "", "root"], [12, 4, 1, "", "start_code"], [12, 3, 1, "", "stream"], [12, 4, 1, "", "style"]], "graphtage.printer.HTMLPrinter": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "ansi_color"], [12, 2, 1, "", "background"], [12, 2, 1, "", "bright"], [12, 2, 1, "", "close"], [12, 4, 1, "", "closed"], [12, 2, 1, "", "color"], [12, 2, 1, "", "context"], [12, 2, 1, "", "dim"], [12, 2, 1, "", "fileno"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "html_element"], [12, 2, 1, "", "indent"], [12, 3, 1, "", "indent_str"], [12, 3, 1, "", "indents"], [12, 2, 1, "", "isatty"], [12, 4, 1, "", "mode"], [12, 4, 1, "", "name"], [12, 2, 1, "", "newline"], [12, 3, 1, "", "out_stream"], [12, 3, 1, "", "quiet"], [12, 2, 1, "", "raw_write"], [12, 2, 1, "", "read"], [12, 2, 1, "", "readable"], [12, 2, 1, "", "readline"], [12, 2, 1, "", "readlines"], [12, 2, 1, "", "seek"], [12, 2, 1, "", "seekable"], [12, 3, 1, "", "status_stream"], [12, 2, 1, "", "strike"], [12, 2, 1, "", "tell"], [12, 2, 1, "", "tqdm"], [12, 2, 1, "", "trange"], [12, 2, 1, "", "truncate"], [12, 2, 1, "", "under_plus"], [12, 2, 1, "", "writable"], [12, 2, 1, "", "write"], [12, 3, 1, "", "write_raw"], [12, 2, 1, "", "writelines"]], "graphtage.printer.NullANSIContext": [[12, 2, 1, "", "__init__"]], "graphtage.printer.Printer": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "ansi_color"], [12, 2, 1, "", "background"], [12, 2, 1, "", "bright"], [12, 2, 1, "", "close"], [12, 4, 1, "", "closed"], [12, 2, 1, "", "color"], [12, 2, 1, "", "context"], [12, 2, 1, "", "dim"], [12, 2, 1, "", "fileno"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "indent"], [12, 3, 1, "", "indent_str"], [12, 3, 1, "", "indents"], [12, 2, 1, "", "isatty"], [12, 4, 1, "", "mode"], [12, 4, 1, "", "name"], [12, 2, 1, "", "newline"], [12, 3, 1, "", "out_stream"], [12, 3, 1, "", "quiet"], [12, 2, 1, "", "raw_write"], [12, 2, 1, "", "read"], [12, 2, 1, "", "readable"], [12, 2, 1, "", "readline"], [12, 2, 1, "", "readlines"], [12, 2, 1, "", "seek"], [12, 2, 1, "", "seekable"], [12, 3, 1, "", "status_stream"], [12, 2, 1, "", "strike"], [12, 2, 1, "", "tell"], [12, 2, 1, "", "tqdm"], [12, 2, 1, "", "trange"], [12, 2, 1, "", "truncate"], [12, 2, 1, "", "under_plus"], [12, 2, 1, "", "writable"], [12, 2, 1, "", "write"], [12, 3, 1, "", "write_raw"], [12, 2, 1, "", "writelines"]], "graphtage.printer.RawWriter": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "isatty"], [12, 2, 1, "", "raw_write"], [12, 2, 1, "", "write"]], "graphtage.printer.Writer": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "flush"], [12, 2, 1, "", "isatty"], [12, 2, 1, "", "write"]], "graphtage.progress": [[13, 1, 1, "", "StatusWriter"]], "graphtage.progress.StatusWriter": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "close"], [13, 4, 1, "", "closed"], [13, 2, 1, "", "fileno"], [13, 2, 1, "", "flush"], [13, 2, 1, "", "isatty"], [13, 4, 1, "", "mode"], [13, 4, 1, "", "name"], [13, 3, 1, "", "quiet"], [13, 2, 1, "", "read"], [13, 2, 1, "", "readable"], [13, 2, 1, "", "readline"], [13, 2, 1, "", "readlines"], [13, 2, 1, "", "seek"], [13, 2, 1, "", "seekable"], [13, 3, 1, "", "status_stream"], [13, 2, 1, "", "tell"], [13, 2, 1, "", "tqdm"], [13, 2, 1, "", "trange"], [13, 2, 1, "", "truncate"], [13, 2, 1, "", "writable"], [13, 2, 1, "", "write"], [13, 3, 1, "", "write_raw"], [13, 2, 1, "", "writelines"]], "graphtage.search": [[14, 1, 1, "", "IterativeTighteningSearch"]], "graphtage.search.IterativeTighteningSearch": [[14, 2, 1, "", "__bool__"], [14, 2, 1, "", "__init__"], [14, 4, 1, "", "best_match"], [14, 2, 1, "", "bounds"], [14, 2, 1, "", "goal_test"], [14, 2, 1, "", "remove_best"], [14, 2, 1, "", "search"], [14, 2, 1, "", "tighten_bounds"]], "graphtage.sequences": [[15, 1, 1, "", "FixedLengthSequenceEdit"], [15, 1, 1, "", "SequenceEdit"], [15, 1, 1, "", "SequenceFormatter"], [15, 1, 1, "", "SequenceNode"]], "graphtage.sequences.FixedLengthSequenceEdit": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__iter__"], [15, 2, 1, "", "__lt__"], [15, 2, 1, "", "bounds"], [15, 2, 1, "", "edits"], [15, 3, 1, "", "from_node"], [15, 2, 1, "", "has_non_zero_cost"], [15, 3, 1, "", "initial_bounds"], [15, 2, 1, "", "is_complete"], [15, 2, 1, "", "on_diff"], [15, 2, 1, "", "print"], [15, 4, 1, "", "sequence"], [15, 2, 1, "", "tighten_bounds"], [15, 4, 1, "", "valid"]], "graphtage.sequences.SequenceEdit": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__iter__"], [15, 2, 1, "", "__lt__"], [15, 2, 1, "", "bounds"], [15, 2, 1, "", "edits"], [15, 3, 1, "", "from_node"], [15, 2, 1, "", "has_non_zero_cost"], [15, 3, 1, "", "initial_bounds"], [15, 2, 1, "", "is_complete"], [15, 2, 1, "", "on_diff"], [15, 2, 1, "", "print"], [15, 4, 1, "", "sequence"], [15, 2, 1, "", "tighten_bounds"], [15, 4, 1, "", "valid"]], "graphtage.sequences.SequenceFormatter": [[15, 3, 1, "", "DEFAULT_INSTANCE"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "edit_print"], [15, 2, 1, "", "get_formatter"], [15, 3, 1, "", "is_partial"], [15, 2, 1, "", "item_newline"], [15, 2, 1, "", "items_indent"], [15, 3, 1, "", "parent"], [15, 2, 1, "", "print"], [15, 2, 1, "", "print_SequenceNode"], [15, 4, 1, "", "root"], [15, 3, 1, "", "sub_format_types"], [15, 3, 1, "", "sub_formatters"]], "graphtage.sequences.SequenceNode": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "__iter__"], [15, 2, 1, "", "__len__"], [15, 2, 1, "", "all_children_are_leaves"], [15, 2, 1, "", "calculate_total_size"], [15, 2, 1, "", "children"], [15, 4, 1, "", "container_type"], [15, 2, 1, "", "dfs"], [15, 2, 1, "", "diff"], [15, 3, 1, "", "edit_modifiers"], [15, 2, 1, "", "editable_dict"], [15, 4, 1, "", "edited"], [15, 2, 1, "", "edited_type"], [15, 2, 1, "", "edits"], [15, 2, 1, "", "get_all_edits"], [15, 4, 1, "", "is_leaf"], [15, 2, 1, "", "make_edited"], [15, 2, 1, "", "print"], [15, 2, 1, "", "to_obj"], [15, 4, 1, "", "total_size"]], "graphtage.utils": [[16, 1, 1, "", "HashableCounter"], [16, 1, 1, "", "OrderedCounter"], [16, 1, 1, "", "Sized"], [16, 1, 1, "", "SparseMatrix"], [16, 1, 1, "", "Tempfile"], [16, 5, 1, "", "getsizeof"], [16, 5, 1, "", "largest"], [16, 5, 1, "", "smallest"]], "graphtage.utils.HashableCounter": [[16, 2, 1, "", "__add__"], [16, 2, 1, "", "__and__"], [16, 2, 1, "", "__delitem__"], [16, 2, 1, "", "__iadd__"], [16, 2, 1, "", "__iand__"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__ior__"], [16, 2, 1, "", "__isub__"], [16, 2, 1, "", "__missing__"], [16, 2, 1, "", "__neg__"], [16, 2, 1, "", "__or__"], [16, 2, 1, "", "__pos__"], [16, 2, 1, "", "__sub__"], [16, 2, 1, "", "_keep_positive"], [16, 2, 1, "", "clear"], [16, 2, 1, "", "copy"], [16, 2, 1, "", "elements"], [16, 2, 1, "", "fromkeys"], [16, 2, 1, "", "get"], [16, 2, 1, "", "items"], [16, 2, 1, "", "keys"], [16, 2, 1, "", "most_common"], [16, 2, 1, "", "pop"], [16, 2, 1, "", "popitem"], [16, 2, 1, "", "setdefault"], [16, 2, 1, "", "subtract"], [16, 2, 1, "", "update"], [16, 2, 1, "", "values"]], "graphtage.utils.OrderedCounter": [[16, 2, 1, "", "__add__"], [16, 2, 1, "", "__and__"], [16, 2, 1, "", "__delitem__"], [16, 2, 1, "", "__iadd__"], [16, 2, 1, "", "__iand__"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__ior__"], [16, 2, 1, "", "__isub__"], [16, 2, 1, "", "__missing__"], [16, 2, 1, "", "__neg__"], [16, 2, 1, "", "__or__"], [16, 2, 1, "", "__pos__"], [16, 2, 1, "", "__sub__"], [16, 2, 1, "", "_keep_positive"], [16, 2, 1, "", "clear"], [16, 2, 1, "", "copy"], [16, 2, 1, "", "elements"], [16, 2, 1, "", "fromkeys"], [16, 2, 1, "", "get"], [16, 2, 1, "", "items"], [16, 2, 1, "", "keys"], [16, 2, 1, "", "most_common"], [16, 2, 1, "", "move_to_end"], [16, 2, 1, "", "pop"], [16, 2, 1, "", "popitem"], [16, 2, 1, "", "setdefault"], [16, 2, 1, "", "subtract"], [16, 2, 1, "", "update"], [16, 2, 1, "", "values"]], "graphtage.utils.Sized": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "getsizeof"]], "graphtage.utils.SparseMatrix": [[16, 1, 1, "", "SparseMatrixRow"], [16, 2, 1, "", "__getitem__"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__len__"], [16, 2, 1, "", "clear"], [16, 3, 1, "", "default_value"], [16, 2, 1, "", "get"], [16, 2, 1, "", "getsizeof"], [16, 2, 1, "", "items"], [16, 2, 1, "", "keys"], [16, 3, 1, "", "num_cols"], [16, 2, 1, "", "num_filled_elements"], [16, 3, 1, "", "num_rows"], [16, 3, 1, "", "rows"], [16, 2, 1, "", "shape"], [16, 2, 1, "", "values"]], "graphtage.utils.SparseMatrix.SparseMatrixRow": [[16, 2, 1, "", "__getitem__"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__iter__"], [16, 2, 1, "", "__len__"], [16, 2, 1, "", "clear"], [16, 3, 1, "", "default_value"], [16, 2, 1, "", "get"], [16, 2, 1, "", "getsizeof"], [16, 2, 1, "", "items"], [16, 2, 1, "", "keys"], [16, 3, 1, "", "num_cols"], [16, 2, 1, "", "pop"], [16, 2, 1, "", "popitem"], [16, 3, 1, "", "row"], [16, 3, 1, "", "row_num"], [16, 2, 1, "", "setdefault"], [16, 2, 1, "", "shape"], [16, 2, 1, "", "update"], [16, 2, 1, "", "values"]], "graphtage.utils.Tempfile": [[16, 2, 1, "", "__enter__"], [16, 2, 1, "", "__exit__"], [16, 2, 1, "", "__init__"]], "graphtage.version": [[17, 3, 1, "", "DEV_BUILD"], [17, 3, 1, "", "VERSION_STRING"], [17, 3, 1, "", "__version__"], [17, 5, 1, "", "git_branch"]], "graphtage.xml": [[18, 1, 1, "", "HTML"], [18, 1, 1, "", "XML"], [18, 1, 1, "", "XMLChildFormatter"], [18, 1, 1, "", "XMLElement"], [18, 1, 1, "", "XMLElementAttribFormatter"], [18, 1, 1, "", "XMLElementEdit"], [18, 1, 1, "", "XMLElementObj"], [18, 1, 1, "", "XMLFormatter"], [18, 1, 1, "", "XMLStringFormatter"], [18, 5, 1, "", "build_tree"]], "graphtage.xml.HTML": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "build_tree"], [18, 2, 1, "", "build_tree_handling_errors"], [18, 2, 1, "", "get_default_formatter"]], "graphtage.xml.XML": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "build_tree"], [18, 2, 1, "", "build_tree_handling_errors"], [18, 2, 1, "", "get_default_formatter"]], "graphtage.xml.XMLChildFormatter": [[18, 3, 1, "", "DEFAULT_INSTANCE"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "__new__"], [18, 3, 1, "", "delimiter_callback"], [18, 2, 1, "", "edit_print"], [18, 2, 1, "", "get_formatter"], [18, 3, 1, "", "is_partial"], [18, 2, 1, "", "item_newline"], [18, 2, 1, "", "items_indent"], [18, 3, 1, "", "parent"], [18, 2, 1, "", "print"], [18, 2, 1, "", "print_ListNode"], [18, 2, 1, "", "print_SequenceNode"], [18, 4, 1, "", "root"], [18, 3, 1, "", "sub_format_types"], [18, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLElement": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "all_children_are_leaves"], [18, 2, 1, "", "calculate_total_size"], [18, 2, 1, "", "children"], [18, 2, 1, "", "dfs"], [18, 2, 1, "", "diff"], [18, 3, 1, "", "edit_modifiers"], [18, 2, 1, "", "editable_dict"], [18, 4, 1, "", "edited"], [18, 2, 1, "", "edited_type"], [18, 2, 1, "", "edits"], [18, 2, 1, "", "get_all_edits"], [18, 4, 1, "", "is_leaf"], [18, 2, 1, "", "make_edited"], [18, 2, 1, "", "print"], [18, 3, 1, "", "tag"], [18, 3, 1, "", "text"], [18, 2, 1, "", "to_obj"], [18, 4, 1, "", "total_size"]], "graphtage.xml.XMLElementAttribFormatter": [[18, 3, 1, "", "DEFAULT_INSTANCE"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "__new__"], [18, 3, 1, "", "delimiter_callback"], [18, 2, 1, "", "edit_print"], [18, 2, 1, "", "get_formatter"], [18, 3, 1, "", "is_partial"], [18, 2, 1, "", "item_newline"], [18, 2, 1, "", "items_indent"], [18, 3, 1, "", "parent"], [18, 2, 1, "", "print"], [18, 2, 1, "", "print_KeyValuePairNode"], [18, 2, 1, "", "print_MappingNode"], [18, 2, 1, "", "print_MultiSetNode"], [18, 2, 1, "", "print_SequenceNode"], [18, 4, 1, "", "root"], [18, 3, 1, "", "sub_format_types"], [18, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLElementEdit": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "__iter__"], [18, 2, 1, "", "__lt__"], [18, 3, 1, "", "attrib_edit"], [18, 2, 1, "", "bounds"], [18, 3, 1, "", "child_edit"], [18, 2, 1, "", "edits"], [18, 3, 1, "", "from_node"], [18, 2, 1, "", "has_non_zero_cost"], [18, 3, 1, "", "initial_bounds"], [18, 2, 1, "", "is_complete"], [18, 2, 1, "", "on_diff"], [18, 2, 1, "", "print"], [18, 3, 1, "", "tag_edit"], [18, 3, 1, "", "text_edit"], [18, 2, 1, "", "tighten_bounds"], [18, 4, 1, "", "valid"]], "graphtage.xml.XMLElementObj": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "attrib"], [18, 3, 1, "", "children"], [18, 3, 1, "", "tag"], [18, 3, 1, "", "text"]], "graphtage.xml.XMLFormatter": [[18, 3, 1, "", "DEFAULT_INSTANCE"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "__new__"], [18, 2, 1, "", "get_formatter"], [18, 3, 1, "", "is_partial"], [18, 3, 1, "", "parent"], [18, 2, 1, "", "print"], [18, 2, 1, "", "print_LeafNode"], [18, 2, 1, "", "print_XMLElement"], [18, 4, 1, "", "root"], [18, 3, 1, "", "sub_format_types"], [18, 3, 1, "", "sub_formatters"]], "graphtage.xml.XMLStringFormatter": [[18, 3, 1, "", "DEFAULT_INSTANCE"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "__new__"], [18, 2, 1, "", "context"], [18, 2, 1, "", "escape"], [18, 2, 1, "", "get_formatter"], [18, 3, 1, "", "is_partial"], [18, 3, 1, "", "is_quoted"], [18, 3, 1, "", "parent"], [18, 2, 1, "", "print"], [18, 2, 1, "", "print_StringEdit"], [18, 2, 1, "", "print_StringNode"], [18, 4, 1, "", "root"], [18, 3, 1, "", "sub_format_types"], [18, 3, 1, "", "sub_formatters"], [18, 2, 1, "", "write_char"], [18, 2, 1, "", "write_end_quote"], [18, 2, 1, "", "write_start_quote"]], "graphtage.yaml": [[19, 1, 1, "", "YAML"], [19, 1, 1, "", "YAMLDictFormatter"], [19, 1, 1, "", "YAMLFormatter"], [19, 1, 1, "", "YAMLKeyValuePairFormatter"], [19, 1, 1, "", "YAMLListFormatter"], [19, 1, 1, "", "YAMLStringFormatter"], [19, 5, 1, "", "build_tree"]], "graphtage.yaml.YAML": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "build_tree"], [19, 2, 1, "", "build_tree_handling_errors"], [19, 2, 1, "", "get_default_formatter"]], "graphtage.yaml.YAMLDictFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 3, 1, "", "delimiter_callback"], [19, 2, 1, "", "edit_print"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "is_partial"], [19, 2, 1, "", "item_newline"], [19, 2, 1, "", "items_indent"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_MappingNode"], [19, 2, 1, "", "print_MultiSetNode"], [19, 2, 1, "", "print_SequenceNode"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "is_partial"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_ContainerNode"], [19, 2, 1, "", "print_LeafNode"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"], [19, 2, 1, "", "write_obj"]], "graphtage.yaml.YAMLKeyValuePairFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "is_partial"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_KeyValuePairNode"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLListFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 3, 1, "", "delimiter_callback"], [19, 2, 1, "", "edit_print"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "is_partial"], [19, 2, 1, "", "item_newline"], [19, 2, 1, "", "items_indent"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_ListNode"], [19, 2, 1, "", "print_SequenceNode"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"]], "graphtage.yaml.YAMLStringFormatter": [[19, 3, 1, "", "DEFAULT_INSTANCE"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__new__"], [19, 2, 1, "", "context"], [19, 2, 1, "", "escape"], [19, 2, 1, "", "get_formatter"], [19, 3, 1, "", "has_newline"], [19, 3, 1, "", "is_partial"], [19, 3, 1, "", "is_quoted"], [19, 3, 1, "", "parent"], [19, 2, 1, "", "print"], [19, 2, 1, "", "print_StringEdit"], [19, 2, 1, "", "print_StringNode"], [19, 4, 1, "", "root"], [19, 3, 1, "", "sub_format_types"], [19, 3, 1, "", "sub_formatters"], [19, 2, 1, "", "write_char"], [19, 2, 1, "", "write_end_quote"], [19, 2, 1, "", "write_start_quote"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"extend": [0, 21], "graphtag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19], "abstractcompoundedit": 1, "abstractedit": 1, "boolnod": 1, "buildopt": 1, "compoundedit": 1, "constantcostedit": 1, "containernod": 1, "dictnod": 1, "edit": [1, 22], "editcollect": 1, "editsequ": 1, "editedtreenod": 1, "filetyp": 1, "filetypewatch": 1, "fixedkeydictnod": 1, "fixedkeydictnodeedit": 1, "floatnod": 1, "graphtageformatt": 1, "insert": 1, "integernod": 1, "keyvaluepairedit": 1, "keyvaluepairnod": 1, "leafnod": 1, "listnod": 1, "mappingnod": 1, "match": [1, 9, 20], "multisetnod": 1, "nullnod": 1, "possibleedit": 1, "remov": 1, "replac": 1, "stringedit": 1, "stringformatt": 1, "stringnod": 1, "treenod": 1, "function": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 17, 18, 19], "explode_edit": 1, "get_filetyp": 1, "string_edit_dist": 1, "bound": 2, "boundedcompar": 2, "constantbound": 2, "infin": 2, "rang": 2, "make_distinct": 2, "min_bound": 2, "repeat_until_tighten": 2, "sort": 2, "csv": 3, "csvformatt": 3, "csvnode": 3, "csvrow": 3, "csvrowformatt": 3, "build_tre": [3, 7, 11, 18, 19], "express": 4, "closebracket": 4, "closeparen": 4, "collectioninfo": 4, "comma": 4, "fixedsizecollect": 4, "floattoken": 4, "functioncal": 4, "identifiertoken": 4, "integertoken": 4, "numerictoken": 4, "openbracket": 4, "openparen": 4, "oper": 4, "operatortoken": 4, "pairedendtoken": 4, "pairedstarttoken": 4, "pairedtoken": 4, "parenthesi": 4, "parseerror": 4, "stringtoken": 4, "token": 4, "get_memb": 4, "todo": 4, "infix_to_rpn": 4, "pars": 4, "fibonacci": 5, "fibonacciheap": 5, "heapnod": 5, "maxfibonacciheap": 5, "reversedcompar": 5, "formatt": 6, "why": [6, 20], "doe": 6, "modul": 6, "exist": 6, "what": 6, "can": 6, "do": 6, "format": [6, 22], "protocol": [6, 24], "basicformatt": 6, "formattercheck": 6, "get_formatt": 6, "json": 7, "json5": 7, "jsondictformatt": 7, "jsonformatt": 7, "jsonlistformatt": 7, "jsonstringformatt": 7, "levenshtein": 8, "editdist": 8, "levenshtein_dist": 8, "edg": 9, "matchingfromnod": 9, "matchingnod": 9, "matchingtonod": 9, "pathset": 9, "queueelement": 9, "sortededg": 9, "weightedbipartitematch": 9, "weightedbipartitematcherpartial_implement": 9, "get_dtyp": 9, "min_weight_bipartite_match": 9, "multiset": 10, "multisetedit": 10, "plist": 11, "plistformatt": 11, "plistnod": 11, "plistsequenceformatt": 11, "printer": 12, "ansicontext": 12, "combiningmarkcontext": 12, "combiningmarkwrit": 12, "htmlansicontext": 12, "htmlprinter": 12, "nullansicontext": 12, "rawwrit": 12, "writer": 12, "only_ansi": 12, "progress": 13, "statuswrit": 13, "search": 14, "iterativetighteningsearch": 14, "sequenc": [15, 20], "fixedlengthsequenceedit": 15, "sequenceedit": 15, "sequenceformatt": 15, "sequencenod": 15, "util": [16, 21], "hashablecount": 16, "orderedcount": 16, "size": 16, "sparsematrix": 16, "tempfil": 16, "getsizeof": 16, "largest": 16, "smallest": 16, "version": 17, "git_branch": 17, "xml": 18, "html": 18, "xmlchildformatt": 18, "xmlelement": 18, "xmlelementattribformatt": 18, "xmlelementedit": 18, "xmlelementobj": 18, "xmlformatt": 18, "xmlstringformatt": 18, "yaml": 19, "yamldictformatt": 19, "yamlformatt": 19, "yamlkeyvaluepairformatt": 19, "yamllistformatt": 19, "yamlstringformatt": 19, "how": [20, 21], "work": [20, 21], "map": 20, "tree": 20, "complex": 20, "order": 20, "unord": 20, "collect": 20, "footnot": 20, "document": 21, "you": 21, "want": 21, "learn": 21, "us": [21, 22], "command": 21, "line": 21, "programmat": [21, 22], "interact": 21, "librari": 21, "modifi": 21, "ar": 21, "alreadi": 21, "familiar": 21, "just": 21, "need": 21, "an": 21, "api": [21, 23], "refer": 21, "curiou": 21, "more": 21, "about": 21, "content": 21, "indic": 21, "tabl": 21, "The": 22, "intermedi": 22, "represent": 22, "transform": 22, "node": 22, "appli": 22, "print": [22, 24], "result": 22}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 56}})